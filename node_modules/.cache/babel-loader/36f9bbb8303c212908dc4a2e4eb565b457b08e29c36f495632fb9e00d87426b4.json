{"ast":null,"code":"var _jsxFileName = \"/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [test, setTest] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (eingabe.trim() !== \"\") {\n          // Überprüfung, ob 'eingabe' leer ist\n          const response = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const jsonData = await response.json();\n          setData(jsonData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [eingabe]); // useEffect abhängig von 'eingabe'\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Abfrage Supporter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Andere Daten: \", JSON.stringify(data)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        value: eingabe // value statt onChange\n        ,\n        onChange: e => setEingabe(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(\"test\"),\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Text\",\n        value: test,\n        onChange: e => setTest(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"JvF18xbwYnrudHWqCbs8vf3chWA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","eingabe","setEingabe","test","setTest","fetchData","trim","response","fetch","ok","Error","jsonData","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","type","placeholder","value","onChange","e","target","onClick","log","_c","$RefreshReg$"],"sources":["/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\n\nconst App: FC = () => {\n    const [data, setData] = useState<any>(null);\n    const [eingabe, setEingabe] = useState<string>(\"\");\n    const [test, setTest] = useState<string>(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (eingabe.trim() !== \"\") { // Überprüfung, ob 'eingabe' leer ist\n                    const response = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok');\n                    }\n                    const jsonData = await response.json();\n                    setData(jsonData);\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, [eingabe]); // useEffect abhängig von 'eingabe'\n\n\n\n    return (\n        <div>\n            <h1>Abfrage Supporter</h1>\n            {data && (\n                <div>\n                    <p>Andere Daten: {JSON.stringify(data)}</p>\n                </div>\n            )}\n\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"ID\"\n                    value={eingabe} // value statt onChange\n                    onChange={(e) => setEingabe(e.target.value)}\n                />\n                <button onClick={() => console.log(\"test\")}>Check</button>\n            </div>\n\n            <div>\n                <input\n                    type={\"text\"}\n                    placeholder={\"Text\"}\n                    value={test}\n                    onChange={(e) => setTest(e.target.value)}\n                />\n            </div>\n\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}