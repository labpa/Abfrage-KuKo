{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woof\\\\Documents\\\\AbschlussProjekt\\\\abfrage-api-supporter\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from \"../src/images/app/grafik 1.png\";\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/map.png';\nimport BarcodeReader from 'react-barcode-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Daten und Eingabe werden deklariert\n  const [data, setData] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [abfrage, setAbfrage] = useState(false);\n  const [warnung, setWarnung] = useState(false);\n  const now = dayjs();\n  const exampleDate = dayjs('2023-06-25'); //todo: exampleDate muss durch now ersetzt werden\n\n  //todo: weiter mit fetchData siehe Auskommentierter code\n  const [noData, setNoData] = useState();\n  console.log(noData);\n  const [barcode, setBarcode] = useState(\"\");\n\n  // const handleScan = (data: any) => {\n  //     setBarcode(data);\n  //     setEingabe(data);\n  // }\n\n  const handleScan = data => {\n    if (data !== \"\") {\n      setBarcode(data);\n      setEingabe(data);\n      fetchData();\n      setAbfrage(true);\n    } else {\n      alert(\"Leer nicht möglich\");\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n\n  //Zeit nach der die Ausgabe beendet wird\n  const normal = 10000; // 10 seconds\n  const lang = 18000; // 18 seconds\n\n  // Array mit Übersetzungen zu den Treffpunkten wird deklariert\n  const waitingSpot = {\n    bike: \"Fahrrad\",\n    bottle: \"Flasche\",\n    island: \"Insel\",\n    keys: \"Schlüssel\",\n    kitchen: \"Küche\",\n    mic: \"Mikro\",\n    mobile: \"Mobile Zellen\",\n    sofa: \"Sofa\",\n    star: \"Stern\",\n    sun: \"Sonne\",\n    tent: \"Zelt\",\n    tree: \"Baum\",\n    turtle: \"Taube\",\n    window: \"bitte erfragen\"\n  };\n  const days = {\n    Mon: \"Mo, Mon\",\n    Tue: \"Di, Tue\",\n    Wed: \"Mi, Wed\",\n    Thu: \"Do, Thue\",\n    Fri: \"Fr, Fri\",\n    Sat: \"Sa, Sat\",\n    Sun: \"So, Sun\"\n  };\n  const fetchData = async () => {\n    try {\n      if (eingabe.trim() !== \"\") {\n        // Überprüfung, ob Eingabe leer ist\n        const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n        if (!ausgabe.ok) {\n          throw new Error('Fehler');\n        }\n        const jsonData = await ausgabe.json();\n\n        //todo: Der Block hier ist nur zum testen\n\n        // console.log(jsonData.data);\n        // console.log(jsonData.data === null); //todo: Hier weiter!!!!!\n        if (jsonData.data === null) {\n          // console.log(\"Keine Daten\");\n          setNoData(false);\n          console.log(\"Keine Daten:\" + noData);\n        } else {\n          // console.log(\"Hier sind die Daten:\" + jsonData.data);\n          setData(true);\n          console.log(\"Hier gibt es Daten\" + noData);\n        }\n        setData(jsonData);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // const fetchData = async () => {\n  //     try {\n  //         if (eingabe.trim() !== \"\") { // Überprüfung, ob Eingabe leer ist\n  //             const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n  //             if (!ausgabe.ok) {\n  //                 throw new Error('Fehler');\n  //             }\n  //\n  //             const jsonData = await ausgabe.json();\n  //             if(jsonData.data !== null){\n  //                 setData(jsonData);\n  //                 // setNoData(false);\n  //             } else {\n  //                 // setNoData(true);\n  //             }\n  //         }\n  //     } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //     }\n  // };\n\n  const handleClick = () => {\n    if (eingabe !== \"\") {\n      fetchData();\n      setAbfrage(true);\n    } else {\n      alert(\"Leer nicht möglich\");\n    }\n  };\n\n  // Neu laden der Seite todo: Aktivieren wenn fertig :D ÄNDERN\n  useEffect(() => {\n    if (!data || data.data === null) {\n      // console.log(\"Kein Ergebnis bei der Abfrage\");\n      const timer = setTimeout(() => {\n        setAbfrage(false);\n      }, 1000); // Timeout von 1 Sekunde\n      return () => clearTimeout(timer);\n    }\n    const timeoutDauer = abfrage && !warnung ? normal : lang;\n    const timer = setTimeout(() => {\n      setAbfrage(false);\n    }, timeoutDauer);\n    return () => clearTimeout(timer);\n  }, [abfrage, data, warnung, normal, lang]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grundflaeche\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !abfrage ? \"box\" : \"box boxleft\",\n        children: !abfrage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch\",\n            children: \"Bitte halte dein B\\xE4ndsel unter den Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch\",\n            children: \"Please hold your wristband under the scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: benzel,\n            alt: \"benzel\",\n            className: \"benzel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [warnung && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warnung\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"warnung-text\",\n                children: \" Irgend was mit Warnung! ... Hallo Volkram, guten Morgen!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch-ausgabe\",\n            children: \"Deine Schichten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch-ausgabe\",\n            children: \"Your Shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), data && data.data && data.data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: data.data.filter(entry => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day')).sort((a, b) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\n            // Ausgabe von index 0 dann die ersten 3 -> 0, 1, 2\n            .slice(0, 3).map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ausgabeabfrage\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"days\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: days[dayjs(entry.startAt).format('ddd')]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 71\n                }, this), \" // \", dayjs(entry.startAt).format('DD.MM - HH:mm')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"vector\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Vector,\n                  alt: \"Vector\",\n                  className: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"place\",\n                children: waitingSpot[entry.waitingSpot]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 49\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 45\n            }, this))\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Karte,\n        alt: \"Karte\",\n        className: `Karte${abfrage ? ' in' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wip\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        value: eingabe,\n        onChange: e => setEingabe(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Abfragen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"0492131A757780\"),\n        children: \"0492131A757780\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BarcodeReader, {\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), barcode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Barcode detected: \", barcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"evSlxBS+lc+JIMEgdqSBV9G5wIA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","BarcodeReader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","eingabe","setEingabe","abfrage","setAbfrage","warnung","setWarnung","now","exampleDate","noData","setNoData","console","log","barcode","setBarcode","handleScan","fetchData","alert","handleError","err","error","normal","lang","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","trim","ausgabe","fetch","ok","Error","jsonData","json","handleClick","timer","setTimeout","clearTimeout","timeoutDauer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","filter","entry","startAt","isAfter","isSame","sort","a","b","diff","slice","map","index","format","type","placeholder","value","onChange","e","target","onClick","onError","onScan","_c","$RefreshReg$"],"sources":["C:/Users/woof/Documents/AbschlussProjekt/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState} from 'react';\r\nimport dayjs from \"dayjs\";\r\nimport './css/App.css'\r\nimport benzel from \"../src/images/app/grafik 1.png\"\r\nimport Vector from '../src/images/app/Vector.png'\r\nimport Karte from '../src/images/app/map.png'\r\nimport BarcodeReader from 'react-barcode-reader';\r\n\r\nconst App: FC = () => {\r\n    // Daten und Eingabe werden deklariert\r\n    const [data, setData] = useState<any>(null);\r\n    const [eingabe, setEingabe] = useState<string>(\"\");\r\n    const [abfrage, setAbfrage] = useState<boolean>(false);\r\n    const [warnung, setWarnung] = useState<boolean>(false);\r\n    const now: dayjs.Dayjs = dayjs();\r\n    const exampleDate = dayjs('2023-06-25'); //todo: exampleDate muss durch now ersetzt werden\r\n\r\n    //todo: weiter mit fetchData siehe Auskommentierter code\r\n    const [noData, setNoData] = useState<boolean>();\r\n    console.log(noData);\r\n\r\n    const [barcode, setBarcode] = useState<string>(\"\");\r\n\r\n\r\n    // const handleScan = (data: any) => {\r\n    //     setBarcode(data);\r\n    //     setEingabe(data);\r\n    // }\r\n\r\n    const handleScan = (data: any) => {\r\n        if (data !== \"\") {\r\n            setBarcode(data);\r\n            setEingabe(data);\r\n            fetchData();\r\n            setAbfrage(true);\r\n        } else {\r\n            alert(\"Leer nicht möglich\");\r\n        }\r\n    }\r\n\r\n\r\n    const handleError = (err: any) => {\r\n        console.error(err);\r\n    }\r\n\r\n\r\n    //Zeit nach der die Ausgabe beendet wird\r\n    const normal = 10000; // 10 seconds\r\n    const lang = 18000; // 18 seconds\r\n\r\n\r\n    // Array mit Übersetzungen zu den Treffpunkten wird deklariert\r\n    const waitingSpot: Record<string, string> = {\r\n        bike: \"Fahrrad\",\r\n        bottle: \"Flasche\",\r\n        island: \"Insel\",\r\n        keys: \"Schlüssel\",\r\n        kitchen: \"Küche\",\r\n        mic: \"Mikro\",\r\n        mobile: \"Mobile Zellen\",\r\n        sofa: \"Sofa\",\r\n        star: \"Stern\",\r\n        sun: \"Sonne\",\r\n        tent: \"Zelt\",\r\n        tree: \"Baum\",\r\n        turtle: \"Taube\",\r\n        window: \"bitte erfragen\"\r\n    }\r\n\r\n    const days: Record<string, string> = {\r\n        Mon: \"Mo, Mon\",\r\n        Tue: \"Di, Tue\",\r\n        Wed: \"Mi, Wed\",\r\n        Thu: \"Do, Thue\",\r\n        Fri: \"Fr, Fri\",\r\n        Sat: \"Sa, Sat\",\r\n        Sun: \"So, Sun\"\r\n    }\r\n\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            if (eingabe.trim() !== \"\") { // Überprüfung, ob Eingabe leer ist\r\n                const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\r\n                if (!ausgabe.ok) {\r\n                    throw new Error('Fehler');\r\n                }\r\n                const jsonData = await ausgabe.json();\r\n\r\n\r\n\r\n\r\n                //todo: Der Block hier ist nur zum testen\r\n\r\n                // console.log(jsonData.data);\r\n                // console.log(jsonData.data === null); //todo: Hier weiter!!!!!\r\n                if(jsonData.data === null){\r\n                    // console.log(\"Keine Daten\");\r\n                    setNoData(false);\r\n                    console.log(\"Keine Daten:\" + noData);\r\n                } else {\r\n                    // console.log(\"Hier sind die Daten:\" + jsonData.data);\r\n                    setData(true);\r\n                    console.log(\"Hier gibt es Daten\" + noData)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                setData(jsonData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         if (eingabe.trim() !== \"\") { // Überprüfung, ob Eingabe leer ist\r\n    //             const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\r\n    //             if (!ausgabe.ok) {\r\n    //                 throw new Error('Fehler');\r\n    //             }\r\n    //\r\n    //             const jsonData = await ausgabe.json();\r\n    //             if(jsonData.data !== null){\r\n    //                 setData(jsonData);\r\n    //                 // setNoData(false);\r\n    //             } else {\r\n    //                 // setNoData(true);\r\n    //             }\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Error fetching data:', error);\r\n    //     }\r\n    // };\r\n\r\n    const handleClick = () => {\r\n        if(eingabe !== \"\"){\r\n            fetchData();\r\n            setAbfrage(true);\r\n        }else {\r\n            alert(\"Leer nicht möglich\")\r\n        }\r\n\r\n    };\r\n\r\n    // Neu laden der Seite todo: Aktivieren wenn fertig :D ÄNDERN\r\n    useEffect(() => {\r\n        if (!data || data.data === null) {\r\n            // console.log(\"Kein Ergebnis bei der Abfrage\");\r\n            const timer = setTimeout(() => {\r\n                setAbfrage(false);\r\n            }, 1000); // Timeout von 1 Sekunde\r\n            return () => clearTimeout(timer);\r\n        }\r\n\r\n        const timeoutDauer = abfrage && !warnung ? normal : lang;\r\n        const timer = setTimeout(() => {\r\n            setAbfrage(false);\r\n        }, timeoutDauer);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [abfrage, data, warnung, normal, lang]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"grundflaeche\"}>\r\n                <div className={!abfrage ? \"box\" : \"box boxleft\"}>\r\n                    {!abfrage ? (\r\n                        <>\r\n                            <h2>Supporter Schichtauskunft</h2>\r\n                            <h3>Supporter Shiftinformation</h3>\r\n                            <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\r\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\r\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\r\n                        </>\r\n                    ) :  (\r\n                        <>\r\n                            {warnung && (\r\n                                <div className={\"scroll-container\"}>\r\n                                    <div className={\"warnung\"}>\r\n                                        <div className={\"warnung-text\"}> Irgend was mit Warnung! ... Hallo Volkram, guten Morgen!</div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <h2>Supporter Schichtauskunft</h2>\r\n                            <h3>Supporter Shiftinformation</h3>\r\n                            <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\r\n                            <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\r\n\r\n                            {/* Sortierung nur, wenn Daten vorhanden sind */}\r\n                            {data && data.data && data.data.length > 0 && (\r\n                                <>\r\n                                    {data.data\r\n                                        .filter((entry: any) => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\r\n                                        .sort((a: any, b: any) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\r\n                                        // Ausgabe von index 0 dann die ersten 3 -> 0, 1, 2\r\n                                        .slice(0, 3)\r\n                                        .map((entry: any, index: number) => (\r\n                                            <div className={\"ausgabeabfrage\"} key={index}>\r\n                                                <p className={\"index\"}>{index + 1}</p>\r\n                                                <p className={\"days\"}><strong>{days[dayjs(entry.startAt).format('ddd')]}</strong> // {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\r\n                                                <p className={\"vector\"}> <img src={Vector} alt=\"Vector\" className=\"Vector\" /></p>\r\n                                                <p className={\"place\"}>{waitingSpot[entry.waitingSpot]}</p>\r\n                                                <br />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            )}\r\n                        </>\r\n\r\n                    )}\r\n                </div>\r\n                <img src={Karte} alt={\"Karte\"} className={`Karte${abfrage ? ' in' : ''}`}  />\r\n            </div>\r\n\r\n            <div className={\"wip\"}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"ID\"\r\n                    value={eingabe}\r\n                    onChange={(e) => setEingabe(e.target.value)}\r\n                />\r\n                <button onClick={handleClick}>Abfragen</button>\r\n                {/*<button onClick={() => window.location.reload()}>Reset</button>*/}\r\n                <button onClick={() => setEingabe(\"0492131A757780\")}>0492131A757780</button>\r\n                {/*<button onClick={() => setEingabe(\"04ABE51A757780\")}>04ABE51A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"048DCC1A757780\")}>048DCC1A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04E0FD1A757780\")} style={{ backgroundColor: 'green' }}>04E0FD1A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"049E0D1A757784\")}>049E0D1A757784</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"0433541A757780\")}>0433541A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04BB2B6ABE6F80\")}>04BB2B6ABE6F80</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04E0dwedefregfrfgrfgFD1A757780\")} style={{ backgroundColor: 'red' }}>04E0FD1A757780</button>*/}\r\n\r\n                {/*<button onClick={() => setWarnung(true)}>Warnung An</button>*/}\r\n                {/*<button onClick={() => setWarnung(false)}>Warnung Aus</button>*/}\r\n\r\n\r\n\r\n                <BarcodeReader\r\n                    onError={handleError}\r\n                    onScan={handleScan}\r\n                />\r\n                {barcode && <p>Barcode detected: {barcode}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}