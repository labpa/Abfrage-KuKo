{"ast":null,"code":"var _jsxFileName = \"/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, {FC, useEffect, useState} from 'react';\n// import dayjs from \"dayjs\";\n// import './css/App.css'\n// import benzel from \"../src/images/app/grafik 1.png\"\n// import Vector from '../src/images/app/Vector.png'\n// import Karte from '../src/images/app/map.png'\n//\n//\n// const App: FC = () => {\n//     //data und eingabe werden deklariert\n//     const [data, setData] = useState<any>(null);\n//     const [eingabe, setEingabe] = useState<string>(\"\");\n//     const [test, setTest] = useState<boolean>(false);\n//     // console.log(test);\n//\n//     //Array mit übersetzungen zu den Treffpunkten wird deklariert\n//     const waitingSpot : Record<string, string> = {\n//         bike: \"Fahrrad\",\n//         bottle: \"Flasche\",\n//         island: \"Insel\",\n//         keys: \"Schlüssel\",\n//         kitchen: \"Küche\",\n//         mic: \"Mikro\",\n//         mobile: \"Mobile Zellen\",\n//         sofa: \"Sofa\",\n//         star: \"Stern\",\n//         sun: \"Sonne\",\n//         tent: \"Zelt\",\n//         tree: \"Baum\",\n//         turtle: \"Taube\",\n//         window: \"bitte erfragen\"\n//     }\n//\n//     const days : Record<string, string> = {\n//         Mon: \"Mo\",\n//         Tue: \"Di\",\n//         Wed: \"Mi\",\n//         Thu: \"Do\",\n//         Fri: \"Fr\",\n//         Sat: \"Sa\",\n//         Sun: \"So\"\n//\n//     }\n//\n//     const fetchData = async () => {\n//         try {\n//             if (eingabe.trim() !== \"\") { // Überprüfung, ob eingabe leer ist\n//                 const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n//                 if (!ausgabe.ok) {\n//                     throw new Error('Fehler');\n//                 }\n//                 const jsonData = await ausgabe.json();\n//                 setData(jsonData);\n//\n//             }\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n//\n//     const handleClick = () => {\n//         fetchData();\n//         setTest(true);\n//     };\n//\n//     //Neu Laden der Seite todo: Aktivieren wenn fertig :D\n//     useEffect(() => {\n//         if(test === true){\n//             const reloadPage = setTimeout(()=> {\n//                 window.location.reload();\n//             }, 10000);\n//             return() => clearTimeout(reloadPage);\n//         }\n//\n//     }, [test]);\n//\n//\n//     return (\n//         <div>\n//\n//             <div className={\"grundflaeche\"}> {/*Dieses DIV beinhaltet die Grundfläche*/}\n//                 <div className={\"box\"}>\n//                     {!test ? (\n//                         <div className={\"kleinebox\"}>\n//                             <h2>Supporter Schichtauskunft</h2>\n//                             <h3>Supporter Shiftinformation</h3>\n//                             <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\n//                             <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n//                             <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n//                         </div>\n//                     ) : (\n//                         <div className={\"alternativebox\"}>\n//                             <h2>Supporter Schichtauskunft</h2>\n//                             <h3>Supporter Shiftinformation</h3>\n//                             <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n//                             <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n//                             {data && data.data\n//                                 .sort((a: any, b: any) => dayjs(a.startAt).unix() - dayjs(b.startAt).unix())\n//                                 .map((entry: any, index: number) => (\n//                                     <div className={\"ausgabeabfrage\"} key={index}>\n//                                         <p className={\"index\"}>{index + 1}</p>\n//                                         <p className={\"days\"}> {dayjs(entry.startAt).locale('de').format('ddd // DD.MM - HH:mm')}</p>\n//                                         <p className={\"place\"}> <img src={Vector} alt=\"Vector\" className=\"Vector\" />{waitingSpot[entry.waitingSpot]}</p>\n//                                         <br />\n//                                     </div>\n//                                 ))\n//                             }\n//\n//                             <img src={Karte} alt={\"Karte\"} className={\"Karte\"}/>\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//\n//\n//             {/*Wird später durch NFC-Reader eingabe ersetzt*/}\n//             <div className={\"wip\"}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"ID\"\n//                     value={eingabe}\n//                     onChange={(e) => setEingabe(e.target.value)}\n//                 />\n//                 <button onClick={handleClick}>Abfragen</button>\n//                 <button onClick={() => window.location.reload()}>Reset</button>\n//                 <button onClick={()=> setEingabe(\"0492131A757780\")}>0492131A757780</button>\n//                 <button onClick={()=> setEingabe(\"04ABE51A757780\")}>04ABE51A757780</button>\n//                 <button onClick={()=> setEingabe(\"048DCC1A757780\")}>048DCC1A757780</button>\n//                 <button onClick={()=> setEingabe(\"04E0FD1A757780\")} style={{backgroundColor: 'red'}}>04E0FD1A757780</button>\n//                 <button onClick={()=> setEingabe(\"049E0D1A757784\")}>049E0D1A757784</button>\n//                 <button  onClick={()=> setEingabe(\"0433541A757780\")}>0433541A757780</button>\n//                 <button onClick={()=> setEingabe(\"04BB2B6ABE6F80\")}>04BB2B6ABE6F80</button>\n//             </div>\n//\n//         </div>\n//     );\n// };\n//\n// export default App;\n\nimport React, { useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from \"../src/images/app/grafik 1.png\";\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/map.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Daten und Eingabe werden deklariert\n  const [data, setData] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [test, setTest] = useState(false);\n\n  // Array mit Übersetzungen zu den Treffpunkten wird deklariert\n  const waitingSpot = {\n    bike: \"Fahrrad\",\n    bottle: \"Flasche\",\n    island: \"Insel\",\n    keys: \"Schlüssel\",\n    kitchen: \"Küche\",\n    mic: \"Mikro\",\n    mobile: \"Mobile Zellen\",\n    sofa: \"Sofa\",\n    star: \"Stern\",\n    sun: \"Sonne\",\n    tent: \"Zelt\",\n    tree: \"Baum\",\n    turtle: \"Taube\",\n    window: \"bitte erfragen\"\n  };\n\n  // Übersetzung der Wochentage\n  const days = {\n    Mon: \"Mo\",\n    Tue: \"Di\",\n    Wed: \"Mi\",\n    Thu: \"Do\",\n    Fri: \"Fr\",\n    Sat: \"Sa\",\n    Sun: \"So\"\n  };\n  const fetchData = async () => {\n    try {\n      if (eingabe.trim() !== \"\") {\n        // Überprüfung, ob Eingabe leer ist\n        const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n        if (!ausgabe.ok) {\n          throw new Error('Fehler');\n        }\n        const jsonData = await ausgabe.json();\n        setData(jsonData);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleClick = () => {\n    fetchData();\n    setTest(true);\n  };\n\n  // Neu laden der Seite todo: Aktivieren wenn fertig :D\n  useEffect(() => {\n    if (test === true) {\n      const reloadPage = setTimeout(() => {\n        window.location.reload();\n      }, 10000);\n      return () => clearTimeout(reloadPage);\n    }\n  }, [test]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grundflaeche\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: !test ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kleinebox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch\",\n            children: \"Bitte halte dein B\\xE4ndsel unter den Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch\",\n            children: \"Please hold your wristband under the scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: benzel,\n            alt: \"benzel\",\n            className: \"benzel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alternativebox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch-ausgabe\",\n            children: \"Deine Schichten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch-ausgabe\",\n            children: \"Your Shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), data && data.data.sort((a, b) => dayjs(a.startAt).unix() - dayjs(b.startAt).unix()).map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ausgabeabfrage\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"days\",\n              children: [days[dayjs(entry.startAt).format('ddd')], \", \", dayjs(entry.startAt).format('DD.MM - HH:mm')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"place\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Vector,\n                alt: \"Vector\",\n                className: \"Vector\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 65\n              }, this), waitingSpot[entry.waitingSpot]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Karte,\n            alt: \"Karte\",\n            className: \"Karte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wip\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        value: eingabe,\n        onChange: e => setEingabe(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Abfragen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"0492131A757780\"),\n        children: \"0492131A757780\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"04ABE51A757780\"),\n        children: \"04ABE51A757780\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"048DCC1A757780\"),\n        children: \"048DCC1A757780\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"04E0FD1A757780\"),\n        style: {\n          backgroundColor: 'red'\n        },\n        children: \"04E0FD1A757780\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"049E0D1A757784\"),\n        children: \"049E0D1A757784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"0433541A757780\"),\n        children: \"0433541A757780\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEingabe(\"04BB2B6ABE6F80\"),\n        children: \"04BB2B6ABE6F80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"VAcXAjT+XRRgmif7PeLYzvpqPoQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","jsxDEV","_jsxDEV","App","_s","data","setData","eingabe","setEingabe","test","setTest","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","fetchData","trim","ausgabe","fetch","ok","Error","jsonData","json","error","console","handleClick","reloadPage","setTimeout","location","reload","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","sort","a","b","startAt","unix","map","entry","index","format","type","placeholder","value","onChange","e","target","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["// import React, {FC, useEffect, useState} from 'react';\n// import dayjs from \"dayjs\";\n// import './css/App.css'\n// import benzel from \"../src/images/app/grafik 1.png\"\n// import Vector from '../src/images/app/Vector.png'\n// import Karte from '../src/images/app/map.png'\n//\n//\n// const App: FC = () => {\n//     //data und eingabe werden deklariert\n//     const [data, setData] = useState<any>(null);\n//     const [eingabe, setEingabe] = useState<string>(\"\");\n//     const [test, setTest] = useState<boolean>(false);\n//     // console.log(test);\n//\n//     //Array mit übersetzungen zu den Treffpunkten wird deklariert\n//     const waitingSpot : Record<string, string> = {\n//         bike: \"Fahrrad\",\n//         bottle: \"Flasche\",\n//         island: \"Insel\",\n//         keys: \"Schlüssel\",\n//         kitchen: \"Küche\",\n//         mic: \"Mikro\",\n//         mobile: \"Mobile Zellen\",\n//         sofa: \"Sofa\",\n//         star: \"Stern\",\n//         sun: \"Sonne\",\n//         tent: \"Zelt\",\n//         tree: \"Baum\",\n//         turtle: \"Taube\",\n//         window: \"bitte erfragen\"\n//     }\n//\n//     const days : Record<string, string> = {\n//         Mon: \"Mo\",\n//         Tue: \"Di\",\n//         Wed: \"Mi\",\n//         Thu: \"Do\",\n//         Fri: \"Fr\",\n//         Sat: \"Sa\",\n//         Sun: \"So\"\n//\n//     }\n//\n//     const fetchData = async () => {\n//         try {\n//             if (eingabe.trim() !== \"\") { // Überprüfung, ob eingabe leer ist\n//                 const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n//                 if (!ausgabe.ok) {\n//                     throw new Error('Fehler');\n//                 }\n//                 const jsonData = await ausgabe.json();\n//                 setData(jsonData);\n//\n//             }\n//         } catch (error) {\n//             console.error('Error fetching data:', error);\n//         }\n//     };\n//\n//     const handleClick = () => {\n//         fetchData();\n//         setTest(true);\n//     };\n//\n//     //Neu Laden der Seite todo: Aktivieren wenn fertig :D\n//     useEffect(() => {\n//         if(test === true){\n//             const reloadPage = setTimeout(()=> {\n//                 window.location.reload();\n//             }, 10000);\n//             return() => clearTimeout(reloadPage);\n//         }\n//\n//     }, [test]);\n//\n//\n//     return (\n//         <div>\n//\n//             <div className={\"grundflaeche\"}> {/*Dieses DIV beinhaltet die Grundfläche*/}\n//                 <div className={\"box\"}>\n//                     {!test ? (\n//                         <div className={\"kleinebox\"}>\n//                             <h2>Supporter Schichtauskunft</h2>\n//                             <h3>Supporter Shiftinformation</h3>\n//                             <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\n//                             <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n//                             <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n//                         </div>\n//                     ) : (\n//                         <div className={\"alternativebox\"}>\n//                             <h2>Supporter Schichtauskunft</h2>\n//                             <h3>Supporter Shiftinformation</h3>\n//                             <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n//                             <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n//                             {data && data.data\n//                                 .sort((a: any, b: any) => dayjs(a.startAt).unix() - dayjs(b.startAt).unix())\n//                                 .map((entry: any, index: number) => (\n//                                     <div className={\"ausgabeabfrage\"} key={index}>\n//                                         <p className={\"index\"}>{index + 1}</p>\n//                                         <p className={\"days\"}> {dayjs(entry.startAt).locale('de').format('ddd // DD.MM - HH:mm')}</p>\n//                                         <p className={\"place\"}> <img src={Vector} alt=\"Vector\" className=\"Vector\" />{waitingSpot[entry.waitingSpot]}</p>\n//                                         <br />\n//                                     </div>\n//                                 ))\n//                             }\n//\n//                             <img src={Karte} alt={\"Karte\"} className={\"Karte\"}/>\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//\n//\n//             {/*Wird später durch NFC-Reader eingabe ersetzt*/}\n//             <div className={\"wip\"}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"ID\"\n//                     value={eingabe}\n//                     onChange={(e) => setEingabe(e.target.value)}\n//                 />\n//                 <button onClick={handleClick}>Abfragen</button>\n//                 <button onClick={() => window.location.reload()}>Reset</button>\n//                 <button onClick={()=> setEingabe(\"0492131A757780\")}>0492131A757780</button>\n//                 <button onClick={()=> setEingabe(\"04ABE51A757780\")}>04ABE51A757780</button>\n//                 <button onClick={()=> setEingabe(\"048DCC1A757780\")}>048DCC1A757780</button>\n//                 <button onClick={()=> setEingabe(\"04E0FD1A757780\")} style={{backgroundColor: 'red'}}>04E0FD1A757780</button>\n//                 <button onClick={()=> setEingabe(\"049E0D1A757784\")}>049E0D1A757784</button>\n//                 <button  onClick={()=> setEingabe(\"0433541A757780\")}>0433541A757780</button>\n//                 <button onClick={()=> setEingabe(\"04BB2B6ABE6F80\")}>04BB2B6ABE6F80</button>\n//             </div>\n//\n//         </div>\n//     );\n// };\n//\n// export default App;\n\n\n\n\n\nimport React, { FC, useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css'\nimport benzel from \"../src/images/app/grafik 1.png\"\nimport Vector from '../src/images/app/Vector.png'\nimport Karte from '../src/images/app/map.png'\n\nconst App: FC = () => {\n    // Daten und Eingabe werden deklariert\n    const [data, setData] = useState<any>(null);\n    const [eingabe, setEingabe] = useState<string>(\"\");\n    const [test, setTest] = useState<boolean>(false);\n\n    // Array mit Übersetzungen zu den Treffpunkten wird deklariert\n    const waitingSpot: Record<string, string> = {\n        bike: \"Fahrrad\",\n        bottle: \"Flasche\",\n        island: \"Insel\",\n        keys: \"Schlüssel\",\n        kitchen: \"Küche\",\n        mic: \"Mikro\",\n        mobile: \"Mobile Zellen\",\n        sofa: \"Sofa\",\n        star: \"Stern\",\n        sun: \"Sonne\",\n        tent: \"Zelt\",\n        tree: \"Baum\",\n        turtle: \"Taube\",\n        window: \"bitte erfragen\"\n    }\n\n    // Übersetzung der Wochentage\n    const days: Record<string, string> = {\n        Mon: \"Mo\",\n        Tue: \"Di\",\n        Wed: \"Mi\",\n        Thu: \"Do\",\n        Fri: \"Fr\",\n        Sat: \"Sa\",\n        Sun: \"So\"\n    }\n\n    const fetchData = async () => {\n        try {\n            if (eingabe.trim() !== \"\") { // Überprüfung, ob Eingabe leer ist\n                const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n                if (!ausgabe.ok) {\n                    throw new Error('Fehler');\n                }\n                const jsonData = await ausgabe.json();\n                setData(jsonData);\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    const handleClick = () => {\n        fetchData();\n        setTest(true);\n    };\n\n    // Neu laden der Seite todo: Aktivieren wenn fertig :D\n    useEffect(() => {\n        if (test === true) {\n            const reloadPage = setTimeout(() => {\n                window.location.reload();\n            }, 10000);\n            return () => clearTimeout(reloadPage);\n        }\n    }, [test]);\n\n    return (\n        <div>\n            <div className={\"grundflaeche\"}>\n                <div className={\"box\"}>\n                    {!test ? (\n                        <div className={\"kleinebox\"}>\n                            <h2>Supporter Schichtauskunft</h2>\n                            <h3>Supporter Shiftinformation</h3>\n                            <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n                        </div>\n                    ) : (\n                        <div className={\"alternativebox\"}>\n                            <h2>Supporter Schichtauskunft</h2>\n                            <h3>Supporter Shiftinformation</h3>\n                            <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n                            <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n                            {data && data.data\n                                .sort((a: any, b: any) => dayjs(a.startAt).unix() - dayjs(b.startAt).unix())\n                                .map((entry: any, index: number) => (\n                                    <div className={\"ausgabeabfrage\"} key={index}>\n                                        <p className={\"index\"}>{index + 1}</p>\n                                        <p className={\"days\"}>{days[dayjs(entry.startAt).format('ddd')]}, {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\n                                        <p className={\"place\"}> <img src={Vector} alt=\"Vector\" className=\"Vector\" />{waitingSpot[entry.waitingSpot]}</p>\n                                        <br />\n                                    </div>\n                                ))\n                            }\n                            <img src={Karte} alt={\"Karte\"} className={\"Karte\"} />\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <div className={\"wip\"}>\n                <input\n                    type=\"text\"\n                    placeholder=\"ID\"\n                    value={eingabe}\n                    onChange={(e) => setEingabe(e.target.value)}\n                />\n                <button onClick={handleClick}>Abfragen</button>\n                <button onClick={() => window.location.reload()}>Reset</button>\n                <button onClick={() => setEingabe(\"0492131A757780\")}>0492131A757780</button>\n                <button onClick={() => setEingabe(\"04ABE51A757780\")}>04ABE51A757780</button>\n                <button onClick={() => setEingabe(\"048DCC1A757780\")}>048DCC1A757780</button>\n                <button onClick={() => setEingabe(\"04E0FD1A757780\")} style={{ backgroundColor: 'red' }}>04E0FD1A757780</button>\n                <button onClick={() => setEingabe(\"049E0D1A757784\")}>049E0D1A757784</button>\n                <button onClick={() => setEingabe(\"0433541A757780\")}>0433541A757780</button>\n                <button onClick={() => setEingabe(\"04BB2B6ABE6F80\")}>04BB2B6ABE6F80</button>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappingstD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,KAAK,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAM,IAAI,CAAC;EAC3C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;;EAEhD;EACA,MAAMe,WAAmC,GAAG;IACxCC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,OAAO;IAChBC,GAAG,EAAE,OAAO;IACZC,MAAM,EAAE,eAAe;IACvBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,OAAO;IACZC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE;EACZ,CAAC;;EAED;EACA,MAAMC,IAA4B,GAAG;IACjCC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE;EACT,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,IAAI3B,OAAO,CAAC4B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAAE;QACzB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,6DAA4D9B,OAAQ,EAAC,CAAC;QACnG,IAAI,CAAC6B,OAAO,CAACE,EAAE,EAAE;UACb,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;QAC7B;QACA,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,CAAC;QACrCnC,OAAO,CAACkC,QAAQ,CAAC;MACrB;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtBV,SAAS,CAAC,CAAC;IACXxB,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACZ,IAAIc,IAAI,KAAK,IAAI,EAAE;MACf,MAAMoC,UAAU,GAAGC,UAAU,CAAC,MAAM;QAChCrB,MAAM,CAACsB,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAC,EAAE,KAAK,CAAC;MACT,OAAO,MAAMC,YAAY,CAACJ,UAAU,CAAC;IACzC;EACJ,CAAC,EAAE,CAACpC,IAAI,CAAC,CAAC;EAEV,oBACIP,OAAA;IAAAgD,QAAA,gBACIhD,OAAA;MAAKiD,SAAS,EAAE,cAAe;MAAAD,QAAA,eAC3BhD,OAAA;QAAKiD,SAAS,EAAE,KAAM;QAAAD,QAAA,EACjB,CAACzC,IAAI,gBACFP,OAAA;UAAKiD,SAAS,EAAE,WAAY;UAAAD,QAAA,gBACxBhD,OAAA;YAAAgD,QAAA,EAAI;UAAyB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClCrD,OAAA;YAAAgD,QAAA,EAAI;UAA0B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCrD,OAAA;YAAIiD,SAAS,EAAE,SAAU;YAAAD,QAAA,EAAC;UAA0C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzErD,OAAA;YAAIiD,SAAS,EAAE,UAAW;YAAAD,QAAA,EAAC;UAA4C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5ErD,OAAA;YAAKsD,GAAG,EAAE1D,MAAO;YAAC2D,GAAG,EAAC,QAAQ;YAACN,SAAS,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,gBAENrD,OAAA;UAAKiD,SAAS,EAAE,gBAAiB;UAAAD,QAAA,gBAC7BhD,OAAA;YAAAgD,QAAA,EAAI;UAAyB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClCrD,OAAA;YAAAgD,QAAA,EAAI;UAA0B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCrD,OAAA;YAAIiD,SAAS,EAAE,iBAAkB;YAAAD,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDrD,OAAA;YAAIiD,SAAS,EAAE,kBAAmB;YAAAD,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAClDlD,IAAI,IAAIA,IAAI,CAACA,IAAI,CACbqD,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAK/D,KAAK,CAAC8D,CAAC,CAACE,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,GAAGjE,KAAK,CAAC+D,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3EC,GAAG,CAAC,CAACC,KAAU,EAAEC,KAAa,kBAC3B/D,OAAA;YAAKiD,SAAS,EAAE,gBAAiB;YAAAD,QAAA,gBAC7BhD,OAAA;cAAGiD,SAAS,EAAE,OAAQ;cAAAD,QAAA,EAAEe,KAAK,GAAG;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtCrD,OAAA;cAAGiD,SAAS,EAAE,MAAO;cAAAD,QAAA,GAAExB,IAAI,CAAC7B,KAAK,CAACmE,KAAK,CAACH,OAAO,CAAC,CAACK,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,IAAE,EAACrE,KAAK,CAACmE,KAAK,CAACH,OAAO,CAAC,CAACK,MAAM,CAAC,eAAe,CAAC;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpHrD,OAAA;cAAGiD,SAAS,EAAE,OAAQ;cAAAD,QAAA,GAAC,GAAC,eAAAhD,OAAA;gBAAKsD,GAAG,EAAEzD,MAAO;gBAAC0D,GAAG,EAAC,QAAQ;gBAACN,SAAS,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAAC5C,WAAW,CAACqD,KAAK,CAACrD,WAAW,CAAC;YAAA;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChHrD,OAAA;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJ6BU,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKvC,CACR,CAAC,eAENrD,OAAA;YAAKsD,GAAG,EAAExD,KAAM;YAACyD,GAAG,EAAE,OAAQ;YAACN,SAAS,EAAE;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENrD,OAAA;MAAKiD,SAAS,EAAE,KAAM;MAAAD,QAAA,gBAClBhD,OAAA;QACIiE,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,IAAI;QAChBC,KAAK,EAAE9D,OAAQ;QACf+D,QAAQ,EAAGC,CAAC,IAAK/D,UAAU,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFrD,OAAA;QAAQuE,OAAO,EAAE7B,WAAY;QAAAM,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CrD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMhD,MAAM,CAACsB,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAAE,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/DrD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAAA0C,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5ErD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAAA0C,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5ErD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAAA0C,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5ErD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAACkE,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAM,CAAE;QAAAzB,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/GrD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAAA0C,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5ErD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAAA0C,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5ErD,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMjE,UAAU,CAAC,gBAAgB,CAAE;QAAA0C,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACnD,EAAA,CAvHID,GAAO;AAAAyE,EAAA,GAAPzE,GAAO;AAyHb,eAAeA,GAAG;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}