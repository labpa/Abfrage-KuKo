{"ast":null,"code":"var _jsxFileName = \"/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from '../src/images/app/grafik 1.png';\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/SupporterMap2024.png';\nimport Pfeil from '../src/images/app/pfeil.png';\nimport Beschriftung from '../src/images/app/beschriftung.png';\nimport BarcodeReader from 'react-barcode-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [dataWeather, setDataWeather] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [abfrage, setAbfrage] = useState(false);\n  const [warnung, setWarnung] = useState(false);\n  const [warnungText, setWarnungText] = useState(null);\n  const exampleDate = dayjs('2023.01.01');\n  const [noData, setNoData] = useState(false);\n  // const [zaehler, setZaehler] = useState<number>(0);\n  const [lastScannedId, setLastScannedId] = useState(\"\");\n  const [scanTimeout, setScanTimeout] = useState(null);\n\n  // Zeitangabe Anzeige Abfrage\n  const normal = 10000; // 10 Sekunden -> Normale Abfrage\n  const lang = 18000; // 18 Sekunden -> Abfrage mit Warnung\n  const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n  const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n  const abfrageWetter = async () => {\n    try {\n      const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=l%C3%A4rz&appid=4d1adda53bf636a53408d0cd1c5ba7b4');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const weatherData = await response.json();\n      setDataWeather(weatherData);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  console.log(dataWeather);\n\n  // Lookup-Tabellen\n  const waitingSpot = {\n    bike: \"Fahrrad\",\n    bottle: \"Flasche\",\n    island: \"Insel\",\n    keys: \"Schlüssel\",\n    kitchen: \"Küche\",\n    mic: \"Mikro\",\n    mobile: \"Mobile Zellen\",\n    sofa: \"Sofa\",\n    star: \"Stern\",\n    sun: \"Sonne\",\n    tent: \"Zelt\",\n    tree: \"Baum\",\n    turtle: \"Taube\",\n    window: \"bitte erfragen\"\n  };\n  const days = {\n    Mon: \"Mo, Mon\",\n    Tue: \"Di, Tue\",\n    Wed: \"Mi, Wed\",\n    Thu: \"Do, Thu\",\n    Fri: \"Fr, Fri\",\n    Sat: \"Sa, Sat\",\n    Sun: \"So, Sun\"\n  };\n\n  // const counter = () => {\n  //     setZaehler(prevCount => prevCount + 1); // Zustand aktualisieren\n  // };\n\n  const resetLastScannedId = () => {\n    setLastScannedId(\"\");\n  };\n\n  // NFC-Reader\n  const handleScan = async data => {\n    if (data !== \"\" && data !== lastScannedId) {\n      setEingabe(data);\n      setLastScannedId(data);\n      await fetchData(data); // Warte auf die Datenabfrage, bevor du fortfährst\n      setAbfrage(true);\n      if (scanTimeout) {\n        clearTimeout(scanTimeout);\n      }\n      setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  const fetchData = async input => {\n    try {\n      const trimmedInput = input.trim();\n      if (trimmedInput !== \"\") {\n        const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n        if (!ausgabeResponse.ok) {\n          throw new Error('Fehler beim Abrufen der Schichtdaten');\n        }\n        const jsonData = await ausgabeResponse.json();\n        const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n        const jsonWarnung = await abfrageWarnung.json();\n        if (jsonWarnung.data && jsonWarnung.data.text) {\n          const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n          setWarnung(true);\n          setWarnungText(textWithoutTags);\n        }\n        if (jsonData.data === null) {\n          setNoData(true);\n          setData(false);\n          setWarnung(false);\n        } else {\n          setData(jsonData);\n        }\n      }\n    } catch (error) {\n      console.error('Fehler beim Abrufen der Daten:', error);\n    }\n  };\n  useEffect(() => {\n    if (noData) {\n      const timer = setTimeout(() => {\n        setNoData(false);\n        setWarnung(false);\n        setAbfrage(false);\n      }, kurz); // 3 seconds\n      return () => clearTimeout(timer);\n    }\n    if (abfrage) {\n      const timeoutDauer = warnung ? lang : normal;\n      const timer = setTimeout(() => {\n        setAbfrage(false);\n        setWarnung(false);\n        // counter();\n      }, timeoutDauer);\n      return () => clearTimeout(timer);\n    }\n  }, [abfrage, warnung, normal, lang, kurz, noData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grundflaeche\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !abfrage ? \"box\" : \"box boxleft\",\n        children: !abfrage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter:innen Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter:innen Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch\",\n            children: \"Bitte halte dein B\\xE4ndsel unter den Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch\",\n            children: \"Please hold your wristband under the scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: benzel,\n            alt: \"benzel\",\n            className: \"benzel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wetter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [warnung && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warnung\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"warnung-text\",\n                children: warnungText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter:innen Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter:innen Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"deutsch-ausgabe\",\n              children: \"Deine Schichten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"englisch-ausgabe\",\n              children: \"Your Shifts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this), data.data && data.data.length > 0 ? data.data.filter(entry => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day')).sort((a, b) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate)).slice(0, 3).map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ausgabeabfrage\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"days\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: days[dayjs(entry.startAt).format('ddd')]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 75\n                }, this), \" // \", dayjs(entry.startAt).format('DD.MM - HH:mm')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"place\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Vector,\n                  alt: \"Vector\",\n                  className: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 76\n                }, this), \" \\xA0 \\xA0 \\xA0  \", waitingSpot[entry.waitingSpot]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 53\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 49\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : noData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"deutsch-ausgabe-no\",\n              children: \"Keine Informationen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"englisch-ausgabe-no\",\n              children: \"No Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Karte,\n        alt: \"Karte\",\n        className: `Karte${abfrage ? ' in' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Pfeil,\n        alt: \"Pfeil\",\n        className: `Pfeil ${abfrage ? 'ok' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Beschriftung,\n        alt: \"Beschriftung\",\n        className: `Beschriftung ${abfrage ? 'ko' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: abfrageWetter,\n      children: \"Wetter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dataWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wip\",\n      children: /*#__PURE__*/_jsxDEV(BarcodeReader, {\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"VUTmGmh9rHIXQjwXnKzDx+h2+6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","Pfeil","Beschriftung","BarcodeReader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","dataWeather","setDataWeather","eingabe","setEingabe","abfrage","setAbfrage","warnung","setWarnung","warnungText","setWarnungText","exampleDate","noData","setNoData","lastScannedId","setLastScannedId","scanTimeout","setScanTimeout","normal","lang","kurz","resetTime","abfrageWetter","response","fetch","ok","Error","status","weatherData","json","error","console","log","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","resetLastScannedId","handleScan","fetchData","clearTimeout","setTimeout","handleError","err","input","trimmedInput","trim","ausgabeResponse","jsonData","abfrageWarnung","jsonWarnung","text","textWithoutTags","replace","timer","timeoutDauer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","filter","entry","startAt","isAfter","isSame","sort","a","b","diff","slice","map","index","format","onClick","onError","onScan","_c","$RefreshReg$"],"sources":["/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from '../src/images/app/grafik 1.png';\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/SupporterMap2024.png';\nimport Pfeil from '../src/images/app/pfeil.png';\nimport Beschriftung from '../src/images/app/beschriftung.png';\nimport BarcodeReader from 'react-barcode-reader';\n\n\nconst App: FC = () => {\n    const [data, setData] = useState<any>(null);\n    const [dataWeather, setDataWeather] = useState<any>(null);\n    const [eingabe, setEingabe] = useState<string>(\"\");\n    const [abfrage, setAbfrage] = useState<boolean>(false);\n    const [warnung, setWarnung] = useState<boolean>(false);\n    const [warnungText, setWarnungText] = useState<string | null>(null);\n    const exampleDate = dayjs('2023.01.01');\n    const [noData, setNoData] = useState<boolean>(false);\n    // const [zaehler, setZaehler] = useState<number>(0);\n    const [lastScannedId, setLastScannedId] = useState<string>(\"\");\n    const [scanTimeout, setScanTimeout] = useState<NodeJS.Timeout | null>(null);\n\n    // Zeitangabe Anzeige Abfrage\n    const normal = 10000; // 10 Sekunden -> Normale Abfrage\n    const lang = 18000; // 18 Sekunden -> Abfrage mit Warnung\n    const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n    const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n\n    const abfrageWetter = async () => {\n        try {\n            const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=l%C3%A4rz&appid=4d1adda53bf636a53408d0cd1c5ba7b4');\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const weatherData = await response.json();\n            setDataWeather(weatherData);\n        } catch (error) {\n            console.error('Error fetching weather data:', error);\n        }\n    };\n\n\nconsole.log(dataWeather);\n\n\n\n\n\n\n    // Lookup-Tabellen\n    const waitingSpot: Record<string, string> = {\n        bike: \"Fahrrad\",\n        bottle: \"Flasche\",\n        island: \"Insel\",\n        keys: \"Schlüssel\",\n        kitchen: \"Küche\",\n        mic: \"Mikro\",\n        mobile: \"Mobile Zellen\",\n        sofa: \"Sofa\",\n        star: \"Stern\",\n        sun: \"Sonne\",\n        tent: \"Zelt\",\n        tree: \"Baum\",\n        turtle: \"Taube\",\n        window: \"bitte erfragen\"\n    };\n\n    const days: Record<string, string> = {\n        Mon: \"Mo, Mon\",\n        Tue: \"Di, Tue\",\n        Wed: \"Mi, Wed\",\n        Thu: \"Do, Thu\",\n        Fri: \"Fr, Fri\",\n        Sat: \"Sa, Sat\",\n        Sun: \"So, Sun\"\n    };\n\n    // const counter = () => {\n    //     setZaehler(prevCount => prevCount + 1); // Zustand aktualisieren\n    // };\n\n    const resetLastScannedId = () => {\n        setLastScannedId(\"\");\n    };\n\n    // NFC-Reader\n    const handleScan = async (data: string) => {\n        if (data !== \"\" && data !== lastScannedId) {\n            setEingabe(data);\n            setLastScannedId(data);\n            await fetchData(data); // Warte auf die Datenabfrage, bevor du fortfährst\n            setAbfrage(true);\n\n            if (scanTimeout) {\n                clearTimeout(scanTimeout);\n            }\n            setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n        }\n    };\n\n    const handleError = (err: any) => {\n        console.error(err);\n    };\n\n    const fetchData = async (input: string) => {\n        try {\n            const trimmedInput = input.trim();\n            if (trimmedInput !== \"\") {\n                const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n\n                if (!ausgabeResponse.ok) {\n                    throw new Error('Fehler beim Abrufen der Schichtdaten');\n                }\n\n                const jsonData = await ausgabeResponse.json();\n                const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n                const jsonWarnung = await abfrageWarnung.json();\n\n                if (jsonWarnung.data && jsonWarnung.data.text) {\n                    const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n                    setWarnung(true);\n                    setWarnungText(textWithoutTags);\n                }\n\n                if (jsonData.data === null) {\n                    setNoData(true);\n                    setData(false);\n                    setWarnung(false);\n                } else {\n                    setData(jsonData);\n                }\n            }\n        } catch (error) {\n            console.error('Fehler beim Abrufen der Daten:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (noData) {\n            const timer = setTimeout(() => {\n                setNoData(false);\n                setWarnung(false);\n                setAbfrage(false);\n            }, kurz); // 3 seconds\n            return () => clearTimeout(timer);\n        }\n\n        if (abfrage) {\n            const timeoutDauer = warnung ? lang : normal;\n            const timer = setTimeout(() => {\n                setAbfrage(false);\n                setWarnung(false);\n                // counter();\n            }, timeoutDauer);\n            return () => clearTimeout(timer);\n        }\n\n    }, [abfrage, warnung, normal, lang, kurz, noData]);\n\n    return (\n        <div>\n            <div className={\"grundflaeche\"}>\n                <div className={!abfrage ? \"box\" : \"box boxleft\"}>\n                    {!abfrage ? (\n                        <>\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter:innen Shiftinformation</h3>\n                            <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n                            <div className={\"wetter\"}>\n\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            {warnung && (\n                                <div className={\"scroll-container\"}>\n                                    <div className={\"warnung\"}>\n                                        <div className={\"warnung-text\"}>{warnungText}</div>\n                                    </div>\n                                </div>\n                            )}\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter:innen Shiftinformation</h3>\n                            {data ? (\n                                <>\n                                    <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n                                    <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n                                    {data.data && data.data.length > 0 ? (\n                                        data.data\n                                            .filter((entry: any) => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\n                                            .sort((a: any, b: any) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\n                                            .slice(0, 3)\n                                            .map((entry: any, index: number) => (\n                                                <div className={\"ausgabeabfrage\"} key={index}>\n                                                    <p className={\"index\"}>{index + 1}</p>\n                                                    <p className={\"days\"}><strong>{days[dayjs(entry.startAt).format('ddd')]}</strong> // {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\n                                                    <p className={\"place\"}><img src={Vector} alt=\"Vector\" className=\"Vector\" /> &nbsp; &nbsp; &nbsp;  {waitingSpot[entry.waitingSpot]}</p>\n                                                    <br />\n                                                </div>\n                                            ))\n                                    ) : (\n                                        <p></p>\n                                    )}\n                                </>\n                            ) : (\n                                noData && (\n                                    <>\n                                        <h4 className={\"deutsch-ausgabe-no\"}>Keine Informationen</h4>\n                                        <h5 className={\"englisch-ausgabe-no\"}>No Information</h5>\n                                    </>\n                                )\n                            )}\n                        </>\n                    )}\n                </div>\n                <img src={Karte} alt={\"Karte\"} className={`Karte${abfrage ? ' in' : ''}`} />\n                <img src={Pfeil} alt={\"Pfeil\"} className={`Pfeil ${abfrage ? 'ok' : ''}`}/>\n                <img src={Beschriftung} alt={\"Beschriftung\"} className={`Beschriftung ${abfrage ? 'ko' : ''}`}/>\n            </div>\n            <button onClick={abfrageWetter}>Wetter</button>\n<div>{dataWeather}</div>\n\n            <div className={\"wip\"}>\n                <BarcodeReader\n                    onError={handleError}\n                    onScan={handleScan}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}