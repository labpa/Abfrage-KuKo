{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woof\\\\Documents\\\\AbschlussProjekt\\\\abfrage-api-supporter\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from \"../src/images/app/grafik 1.png\";\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/map.png';\nimport BarcodeReader from 'react-barcode-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Daten und Eingabe werden deklariert\n  const [data, setData] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [abfrage, setAbfrage] = useState(false);\n  const [warnung, setWarnung] = useState(false);\n  const [warnungText, setWarnungText] = useState(null);\n  const now = dayjs();\n  const exampleDate = dayjs('2023.01.01'); //todo: exampleDate muss durch now ersetzt werden\n\n  // console.log(data);\n  console.log(warnungText);\n\n  //todo: weiter mit fetchData siehe Auskommentierter code\n  const [noData, setNoData] = useState();\n  console.log(noData);\n  const [uid, setUid] = useState(\"\");\n  console.log(uid);\n\n  //Verarbeitung der eingabe des NFC-Scanners\n  const handleScan = async data => {\n    if (data !== \"\") {\n      setUid(data);\n      setEingabe(data);\n      await fetchData(); // Warte auf die Datenabfrage, bevor du fortfährst\n      setAbfrage(true);\n    } else {\n      alert(\"Leer nicht möglich\");\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n\n  //Zeit nach der die Ausgabe beendet wird\n  const normal = 10000; // 10 seconds\n  const lang = 18000; // 18 seconds\n\n  // Array mit Übersetzungen zu den Treffpunkten wird deklariert\n  const waitingSpot = {\n    bike: \"Fahrrad\",\n    bottle: \"Flasche\",\n    island: \"Insel\",\n    keys: \"Schlüssel\",\n    kitchen: \"Küche\",\n    mic: \"Mikro\",\n    mobile: \"Mobile Zellen\",\n    sofa: \"Sofa\",\n    star: \"Stern\",\n    sun: \"Sonne\",\n    tent: \"Zelt\",\n    tree: \"Baum\",\n    turtle: \"Taube\",\n    window: \"bitte erfragen\"\n  };\n  const days = {\n    Mon: \"Mo, Mon\",\n    Tue: \"Di, Tue\",\n    Wed: \"Mi, Wed\",\n    Thu: \"Do, Thue\",\n    Fri: \"Fr, Fri\",\n    Sat: \"Sa, Sat\",\n    Sun: \"So, Sun\"\n  };\n\n  // const fetchData = async () => {\n  //     try {\n  //         if (eingabe.trim() !== \"\") { // Überprüfung, ob Eingabe leer ist\n  //             const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\n  //             if (!ausgabe.ok) {\n  //                 throw new Error('Fehler');\n  //             }\n  //             const jsonData = await ausgabe.json();\n  //             const test = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n  //             const jsonTest = await test.json()\n  //             if(jsonTest.data.text !== null){\n  //                 setWarnung(true);\n  //                 setWarnungText(jsonTest.data.text)\n  //             }\n  //             console.log(jsonTest.data.text);\n  //\n  //             //todo: Der Block hier ist nur zum testen\n  //\n  //             // console.log(jsonData.data);\n  //             // console.log(jsonData.data === null); //todo: Hier weiter!!!!!\n  //             if(jsonData.data === null){\n  //                 // console.log(\"Keine Daten\");\n  //                 setNoData(false);\n  //                 // console.log(\"Keine Daten:\" + noData);\n  //             } else {\n  //                 // console.log(\"Hier sind die Daten:\" + jsonData.data);\n  //                 setData(true);\n  //                 // console.log(\"Hier gibt es Daten\" + noData)\n  //             }\n  //             setData(jsonData);\n  //         }\n  //     } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //     }\n  // };\n\n  const fetchData = async () => {\n    try {\n      const trimmedInput = eingabe.trim();\n      if (trimmedInput !== \"\") {\n        const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n        if (!ausgabeResponse.ok) {\n          throw new Error('Fehler beim Abrufen der Schichtdaten');\n        }\n        const jsonData = await ausgabeResponse.json();\n        const testResponse = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n        const jsonTest = await testResponse.json();\n        if (jsonTest.data.text) {\n          setWarnung(true);\n          setWarnungText(jsonTest.data.text);\n        }\n        console.log(jsonTest.data.text !== null);\n        if (jsonData.data === null) {\n          setNoData(true);\n        } else {\n          setData(jsonData);\n        }\n      }\n    } catch (error) {\n      console.error('Fehler beim Abrufen der Daten:', error);\n    }\n  };\n  const handleClick = () => {\n    if (eingabe !== \"\") {\n      fetchData();\n      setAbfrage(true);\n    } else {\n      alert(\"Leer nicht möglich\");\n    }\n  };\n\n  // Neu laden der Seite todo: Aktivieren wenn fertig :D ÄNDERN\n  useEffect(() => {\n    if (!data || data.data === null) {\n      // console.log(\"Kein Ergebnis bei der Abfrage\");\n      const timer = setTimeout(() => {\n        setAbfrage(false);\n      }, 1000); // Timeout von 1 Sekunde\n      return () => clearTimeout(timer);\n    }\n    const timeoutDauer = abfrage && !warnung ? normal : lang;\n    const timer = setTimeout(() => {\n      setAbfrage(false);\n    }, timeoutDauer);\n    return () => clearTimeout(timer);\n  }, [abfrage, data, warnung, normal, lang]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grundflaeche\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !abfrage ? \"box\" : \"box boxleft\",\n        children: !abfrage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch\",\n            children: \"Bitte halte dein B\\xE4ndsel unter den Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch\",\n            children: \"Please hold your wristband under the scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: benzel,\n            alt: \"benzel\",\n            className: \"benzel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [warnung && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warnung\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"warnung-text\",\n                children: warnungText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch-ausgabe\",\n            children: \"Deine Schichten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch-ausgabe\",\n            children: \"Your Shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), data && data.data && data.data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: data.data\n            //Filtern nach Datum\n            .filter(entry => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\n            //Sortieren\n            .sort((a, b) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\n            // Ausgabe von index 0 dann die ersten 3 -> 0, 1, 2\n            .slice(0, 3).map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ausgabeabfrage\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"days\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: days[dayjs(entry.startAt).format('ddd')]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 71\n                }, this), \" // \", dayjs(entry.startAt).format('DD.MM - HH:mm')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"vector\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Vector,\n                  alt: \"Vector\",\n                  className: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"place\",\n                children: waitingSpot[entry.waitingSpot]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 49\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 45\n            }, this))\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Karte,\n        alt: \"Karte\",\n        className: `Karte${abfrage ? ' in' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wip\",\n      children: /*#__PURE__*/_jsxDEV(BarcodeReader, {\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"SUgpXHZLyzTJ/ThZrxQEeaLYU5c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","BarcodeReader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","eingabe","setEingabe","abfrage","setAbfrage","warnung","setWarnung","warnungText","setWarnungText","now","exampleDate","console","log","noData","setNoData","uid","setUid","handleScan","fetchData","alert","handleError","err","error","normal","lang","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","trimmedInput","trim","ausgabeResponse","fetch","ok","Error","jsonData","json","testResponse","jsonTest","text","handleClick","timer","setTimeout","clearTimeout","timeoutDauer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","filter","entry","startAt","isAfter","isSame","sort","a","b","diff","slice","map","index","format","onError","onScan","_c","$RefreshReg$"],"sources":["C:/Users/woof/Documents/AbschlussProjekt/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState} from 'react';\r\nimport dayjs from \"dayjs\";\r\nimport './css/App.css'\r\nimport benzel from \"../src/images/app/grafik 1.png\"\r\nimport Vector from '../src/images/app/Vector.png'\r\nimport Karte from '../src/images/app/map.png'\r\nimport BarcodeReader from 'react-barcode-reader';\r\n\r\nconst App: FC = () => {\r\n    // Daten und Eingabe werden deklariert\r\n    const [data, setData] = useState<any>(null);\r\n    const [eingabe, setEingabe] = useState<string>(\"\");\r\n    const [abfrage, setAbfrage] = useState<boolean>(false);\r\n    const [warnung, setWarnung] = useState<boolean>(false);\r\n    const [warnungText, setWarnungText] = useState<any>(null);\r\n    const now: dayjs.Dayjs = dayjs();\r\n    const exampleDate = dayjs('2023.01.01'); //todo: exampleDate muss durch now ersetzt werden\r\n\r\n    // console.log(data);\r\n    console.log(warnungText);\r\n\r\n    //todo: weiter mit fetchData siehe Auskommentierter code\r\n    const [noData, setNoData] = useState<boolean>();\r\n    console.log(noData);\r\n\r\n    const [uid, setUid] = useState<string>(\"\");\r\n    console.log(uid);\r\n\r\n    //Verarbeitung der eingabe des NFC-Scanners\r\n    const handleScan = async (data: any) => {\r\n        if (data !== \"\") {\r\n            setUid(data);\r\n            setEingabe(data);\r\n            await fetchData(); // Warte auf die Datenabfrage, bevor du fortfährst\r\n            setAbfrage(true);\r\n        } else {\r\n            alert(\"Leer nicht möglich\");\r\n        }\r\n    }\r\n    const handleError = (err: any) => {\r\n        console.error(err);\r\n    }\r\n\r\n\r\n    //Zeit nach der die Ausgabe beendet wird\r\n    const normal = 10000; // 10 seconds\r\n    const lang = 18000; // 18 seconds\r\n\r\n\r\n    // Array mit Übersetzungen zu den Treffpunkten wird deklariert\r\n    const waitingSpot: Record<string, string> = {\r\n        bike: \"Fahrrad\",\r\n        bottle: \"Flasche\",\r\n        island: \"Insel\",\r\n        keys: \"Schlüssel\",\r\n        kitchen: \"Küche\",\r\n        mic: \"Mikro\",\r\n        mobile: \"Mobile Zellen\",\r\n        sofa: \"Sofa\",\r\n        star: \"Stern\",\r\n        sun: \"Sonne\",\r\n        tent: \"Zelt\",\r\n        tree: \"Baum\",\r\n        turtle: \"Taube\",\r\n        window: \"bitte erfragen\"\r\n    }\r\n\r\n    const days: Record<string, string> = {\r\n        Mon: \"Mo, Mon\",\r\n        Tue: \"Di, Tue\",\r\n        Wed: \"Mi, Wed\",\r\n        Thu: \"Do, Thue\",\r\n        Fri: \"Fr, Fri\",\r\n        Sat: \"Sa, Sat\",\r\n        Sun: \"So, Sun\"\r\n    }\r\n\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         if (eingabe.trim() !== \"\") { // Überprüfung, ob Eingabe leer ist\r\n    //             const ausgabe = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${eingabe}`);\r\n    //             if (!ausgabe.ok) {\r\n    //                 throw new Error('Fehler');\r\n    //             }\r\n    //             const jsonData = await ausgabe.json();\r\n    //             const test = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\r\n    //             const jsonTest = await test.json()\r\n    //             if(jsonTest.data.text !== null){\r\n    //                 setWarnung(true);\r\n    //                 setWarnungText(jsonTest.data.text)\r\n    //             }\r\n    //             console.log(jsonTest.data.text);\r\n    //\r\n    //             //todo: Der Block hier ist nur zum testen\r\n    //\r\n    //             // console.log(jsonData.data);\r\n    //             // console.log(jsonData.data === null); //todo: Hier weiter!!!!!\r\n    //             if(jsonData.data === null){\r\n    //                 // console.log(\"Keine Daten\");\r\n    //                 setNoData(false);\r\n    //                 // console.log(\"Keine Daten:\" + noData);\r\n    //             } else {\r\n    //                 // console.log(\"Hier sind die Daten:\" + jsonData.data);\r\n    //                 setData(true);\r\n    //                 // console.log(\"Hier gibt es Daten\" + noData)\r\n    //             }\r\n    //             setData(jsonData);\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Error fetching data:', error);\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const trimmedInput = eingabe.trim();\r\n            if (trimmedInput !== \"\") {\r\n                const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\r\n\r\n                if (!ausgabeResponse.ok) {\r\n                    throw new Error('Fehler beim Abrufen der Schichtdaten');\r\n                }\r\n\r\n                const jsonData = await ausgabeResponse.json();\r\n                const testResponse = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\r\n                const jsonTest = await testResponse.json();\r\n\r\n                if (jsonTest.data.text) {\r\n                    setWarnung(true);\r\n                    setWarnungText(jsonTest.data.text);\r\n                }\r\n\r\n                console.log(jsonTest.data.text !== null);\r\n\r\n                if (jsonData.data === null) {\r\n                    setNoData(true);\r\n                } else {\r\n                    setData(jsonData);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Fehler beim Abrufen der Daten:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        if(eingabe !== \"\"){\r\n            fetchData();\r\n            setAbfrage(true);\r\n        }else {\r\n            alert(\"Leer nicht möglich\")\r\n        }\r\n\r\n    };\r\n\r\n    // Neu laden der Seite todo: Aktivieren wenn fertig :D ÄNDERN\r\n    useEffect(() => {\r\n        if (!data || data.data === null) {\r\n            // console.log(\"Kein Ergebnis bei der Abfrage\");\r\n            const timer = setTimeout(() => {\r\n                setAbfrage(false);\r\n            }, 1000); // Timeout von 1 Sekunde\r\n            return () => clearTimeout(timer);\r\n        }\r\n\r\n        const timeoutDauer = abfrage && !warnung ? normal : lang;\r\n        const timer = setTimeout(() => {\r\n            setAbfrage(false);\r\n        }, timeoutDauer);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [abfrage, data, warnung, normal, lang]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"grundflaeche\"}>\r\n                <div className={!abfrage ? \"box\" : \"box boxleft\"}>\r\n                    {!abfrage ? (\r\n                        <>\r\n                            <h2>Supporter Schichtauskunft</h2>\r\n                            <h3>Supporter Shiftinformation</h3>\r\n                            <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\r\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\r\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\r\n                        </>\r\n                    ) :  (\r\n                        <>\r\n                            {warnung && (\r\n                                <div className={\"scroll-container\"}>\r\n                                    <div className={\"warnung\"}>\r\n                                        <div className={\"warnung-text\"}>{warnungText}</div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <h2>Supporter Schichtauskunft</h2>\r\n                            <h3>Supporter Shiftinformation</h3>\r\n                            <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\r\n                            <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\r\n\r\n                            {/* Sortierung nur, wenn Daten vorhanden sind */}\r\n                            {data && data.data && data.data.length > 0 && (\r\n                                <>\r\n                                    {data.data\r\n                                        //Filtern nach Datum\r\n                                        .filter((entry: any) => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\r\n                                        //Sortieren\r\n                                        .sort((a: any, b: any) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\r\n                                        // Ausgabe von index 0 dann die ersten 3 -> 0, 1, 2\r\n                                        .slice(0, 3)\r\n\r\n                                        .map((entry: any, index: number) => (\r\n                                            <div className={\"ausgabeabfrage\"} key={index}>\r\n                                                <p className={\"index\"}>{index + 1}</p>\r\n                                                {/*Anzeige des Wochentags und des Datums im gewünschten Format*/}\r\n                                                <p className={\"days\"}><strong>{days[dayjs(entry.startAt).format('ddd')]}</strong> // {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\r\n                                                {/*Anzeigen des Vectors*/}\r\n                                                <p className={\"vector\"}> <img src={Vector} alt=\"Vector\" className=\"Vector\" /></p>\r\n                                                {/*Anzeige des Wartebereichs*/}\r\n                                                <p className={\"place\"}>{waitingSpot[entry.waitingSpot]}</p>\r\n                                                <br />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            )}\r\n                        </>\r\n\r\n                    )}\r\n                </div>\r\n                <img src={Karte} alt={\"Karte\"} className={`Karte${abfrage ? ' in' : ''}`}  />\r\n            </div>\r\n\r\n            <div className={\"wip\"}>\r\n                {/*<input*/}\r\n                {/*    type=\"text\"*/}\r\n                {/*    placeholder=\"ID\"*/}\r\n                {/*    value={eingabe}*/}\r\n                {/*    onChange={(e) => setEingabe(e.target.value)}*/}\r\n                {/*/>*/}\r\n                {/*<button onClick={handleClick}>Abfragen</button>*/}\r\n                {/*<button onClick={() => window.location.reload()}>Reset</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"0492131A757780\")}>0492131A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04ABE51A757780\")}>04ABE51A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"048DCC1A757780\")}>048DCC1A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04E0FD1A757780\")} style={{ backgroundColor: 'green' }}>04E0FD1A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"049E0D1A757784\")}>049E0D1A757784</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"0433541A757780\")}>0433541A757780</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04BB2B6ABE6F80\")}>04BB2B6ABE6F80</button>*/}\r\n                {/*<button onClick={() => setEingabe(\"04E0dwedefregfrfgrfgFD1A757780\")} style={{ backgroundColor: 'red' }}>04E0FD1A757780</button>*/}\r\n\r\n                {/*<button onClick={() => setWarnung(true)}>Warnung An</button>*/}\r\n                {/*<button onClick={() => setWarnung(false)}>Warnung Aus</button>*/}\r\n\r\n\r\n\r\n                <BarcodeReader\r\n                    onError={handleError}\r\n                    onScan={handleScan}\r\n                />\r\n                {/*{uid && <p>Barcode detected: {uid}</p>}*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}