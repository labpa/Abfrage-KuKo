{"ast":null,"code":"var _jsxFileName = \"/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from '../src/images/app/grafik 1.png';\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/SupporterMap2024.png';\nimport Pfeil from '../src/images/app/pfeil.png';\nimport Beschriftung from '../src/images/app/beschriftung.png';\nimport BarcodeReader from 'react-barcode-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [dataWeather, setDataWeather] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [abfrage, setAbfrage] = useState(false);\n  const [warnung, setWarnung] = useState(false);\n  const [warnungText, setWarnungText] = useState(null);\n  const exampleDate = dayjs('2023.01.01');\n  const [noData, setNoData] = useState(false);\n  // const [zaehler, setZaehler] = useState<number>(0);\n  const [lastScannedId, setLastScannedId] = useState(\"\");\n  const [scanTimeout, setScanTimeout] = useState(null);\n\n  // Zeitangabe Anzeige Abfrage\n  const normal = 10000; // 10 Sekunden -> Normale Abfrage\n  const lang = 18000; // 18 Sekunden -> Abfrage mit Warnung\n  const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n  const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n  const abfrageWetter = async () => {\n    let success = false;\n    while (!success) {\n      try {\n        const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=l%C3%A4rz&units=metric&&appid=4d1adda53bf636a53408d0cd1c5ba7b4');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const weatherData = await response.json();\n        setDataWeather(weatherData);\n        success = true; // Beende die Schleife, wenn die Abfrage erfolgreich war\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        // Optional: Warte ein wenig, bevor du es erneut versuchst, um zu vermeiden, die API zu 체berlasten\n        await new Promise(resolve => setTimeout(resolve, 100)); // 5 Sekunden warten\n      }\n    }\n  };\n\n  // abfrageWetter();\n\n  // const abfrageWetter = async () => {\n  //     try {\n  //         const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=l%C3%A4rz&appid=4d1adda53bf636a53408d0cd1c5ba7b4');\n  //\n  //         if (!response.ok) {\n  //             throw new Error(`HTTP error! status: ${response.status}`);\n  //         }\n  //\n  //         const weatherData = await response.json();\n  //         setDataWeather(weatherData);\n  //     } catch (error) {\n  //         console.error('Error fetching weather data:', error);\n  //     }\n  // };\n  //\n  // // Erste Abfrage bei Start\n  // // abfrageWetter();\n\n  // Wiederhole die Abfrage alle 30 Minuten\n  setInterval(abfrageWetter, 30 * 60 * 1000); // 30 Minuten in Millisekunden\n\n  console.log(dataWeather);\n\n  // Lookup-Tabellen\n  const waitingSpot = {\n    bike: \"Fahrrad\",\n    bottle: \"Flasche\",\n    island: \"Insel\",\n    keys: \"Schl체ssel\",\n    kitchen: \"K체che\",\n    mic: \"Mikro\",\n    mobile: \"Mobile Zellen\",\n    sofa: \"Sofa\",\n    star: \"Stern\",\n    sun: \"Sonne\",\n    tent: \"Zelt\",\n    tree: \"Baum\",\n    turtle: \"Taube\",\n    window: \"bitte erfragen\"\n  };\n  const days = {\n    Mon: \"Mo, Mon\",\n    Tue: \"Di, Tue\",\n    Wed: \"Mi, Wed\",\n    Thu: \"Do, Thu\",\n    Fri: \"Fr, Fri\",\n    Sat: \"Sa, Sat\",\n    Sun: \"So, Sun\"\n  };\n  const resetLastScannedId = () => {\n    setLastScannedId(\"\");\n  };\n\n  // NFC-Reader\n  const handleScan = async data => {\n    if (data !== \"\" && data !== lastScannedId) {\n      setEingabe(data);\n      setLastScannedId(data);\n      await fetchData(data); // Warte auf die Datenabfrage, bevor du fortf채hrst\n      setAbfrage(true);\n      if (scanTimeout) {\n        clearTimeout(scanTimeout);\n      }\n      setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  const fetchData = async input => {\n    try {\n      const trimmedInput = input.trim();\n      if (trimmedInput !== \"\") {\n        const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n        if (!ausgabeResponse.ok) {\n          throw new Error('Fehler beim Abrufen der Schichtdaten');\n        }\n        const jsonData = await ausgabeResponse.json();\n        const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n        const jsonWarnung = await abfrageWarnung.json();\n        if (jsonWarnung.data && jsonWarnung.data.text) {\n          const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n          setWarnung(true);\n          setWarnungText(textWithoutTags);\n        }\n        if (jsonData.data === null) {\n          setNoData(true);\n          setData(false);\n          setWarnung(false);\n        } else {\n          setData(jsonData);\n        }\n      }\n    } catch (error) {\n      console.error('Fehler beim Abrufen der Daten:', error);\n    }\n  };\n  useEffect(() => {\n    if (noData) {\n      const timer = setTimeout(() => {\n        setNoData(false);\n        setWarnung(false);\n        setAbfrage(false);\n      }, kurz); // 3 seconds\n      return () => clearTimeout(timer);\n    }\n    if (abfrage) {\n      const timeoutDauer = warnung ? lang : normal;\n      const timer = setTimeout(() => {\n        setAbfrage(false);\n        setWarnung(false);\n      }, timeoutDauer);\n      return () => clearTimeout(timer);\n    }\n  }, [abfrage, warnung, normal, lang, kurz, noData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grundflaeche\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !abfrage ? \"box\" : \"box boxleft\",\n        children: !abfrage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter:innen Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter:innen Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch\",\n            children: \"Bitte halte dein B\\xE4ndsel unter den Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch\",\n            children: \"Please hold your wristband under the scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: benzel,\n            alt: \"benzel\",\n            className: \"benzel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wetter\",\n            children: dataWeather && dataWeather.weather && dataWeather.weather.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wetter-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"location\",\n                children: dataWeather.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"temperature\",\n                children: [Math.round(dataWeather.main.temp), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"weather-description\",\n                children: dataWeather.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wind-speed\",\n                children: [\"Wind: \", dataWeather.wind.speed, \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [warnung && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warnung\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"warnung-text\",\n                children: warnungText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter:innen Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter:innen Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"deutsch-ausgabe\",\n              children: \"Deine Schichten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"englisch-ausgabe\",\n              children: \"Your Shifts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this), data.data && data.data.length > 0 ? data.data.filter(entry => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day')).sort((a, b) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate)).slice(0, 3).map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ausgabeabfrage\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"days\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: days[dayjs(entry.startAt).format('ddd')]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 75\n                }, this), \" // \", dayjs(entry.startAt).format('DD.MM - HH:mm')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"place\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Vector,\n                  alt: \"Vector\",\n                  className: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 76\n                }, this), \" \\xA0 \\xA0 \\xA0  \", waitingSpot[entry.waitingSpot]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 53\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 49\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : noData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"deutsch-ausgabe-no\",\n              children: \"Keine Informationen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"englisch-ausgabe-no\",\n              children: \"No Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Karte,\n        alt: \"Karte\",\n        className: `Karte${abfrage ? ' in' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Pfeil,\n        alt: \"Pfeil\",\n        className: `Pfeil ${abfrage ? 'ok' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Beschriftung,\n        alt: \"Beschriftung\",\n        className: `Beschriftung ${abfrage ? 'ko' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: abfrageWetter,\n      children: \"Wetter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wip\",\n      children: /*#__PURE__*/_jsxDEV(BarcodeReader, {\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"VUTmGmh9rHIXQjwXnKzDx+h2+6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","Pfeil","Beschriftung","BarcodeReader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","dataWeather","setDataWeather","eingabe","setEingabe","abfrage","setAbfrage","warnung","setWarnung","warnungText","setWarnungText","exampleDate","noData","setNoData","lastScannedId","setLastScannedId","scanTimeout","setScanTimeout","normal","lang","kurz","resetTime","abfrageWetter","success","response","fetch","ok","Error","status","weatherData","json","error","console","Promise","resolve","setTimeout","setInterval","log","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","resetLastScannedId","handleScan","fetchData","clearTimeout","handleError","err","input","trimmedInput","trim","ausgabeResponse","jsonData","abfrageWarnung","jsonWarnung","text","textWithoutTags","replace","timer","timeoutDauer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","weather","length","name","Math","round","main","temp","description","wind","speed","filter","entry","startAt","isAfter","isSame","sort","a","b","diff","slice","map","index","format","onClick","onError","onScan","_c","$RefreshReg$"],"sources":["/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from '../src/images/app/grafik 1.png';\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/SupporterMap2024.png';\nimport Pfeil from '../src/images/app/pfeil.png';\nimport Beschriftung from '../src/images/app/beschriftung.png';\nimport BarcodeReader from 'react-barcode-reader';\n\n\nconst App: FC = () => {\n    const [data, setData] = useState<any>(null);\n    const [dataWeather, setDataWeather] = useState<any>(null);\n    const [eingabe, setEingabe] = useState<string>(\"\");\n    const [abfrage, setAbfrage] = useState<boolean>(false);\n    const [warnung, setWarnung] = useState<boolean>(false);\n    const [warnungText, setWarnungText] = useState<string | null>(null);\n    const exampleDate = dayjs('2023.01.01');\n    const [noData, setNoData] = useState<boolean>(false);\n    // const [zaehler, setZaehler] = useState<number>(0);\n    const [lastScannedId, setLastScannedId] = useState<string>(\"\");\n    const [scanTimeout, setScanTimeout] = useState<NodeJS.Timeout | null>(null);\n\n    // Zeitangabe Anzeige Abfrage\n    const normal = 10000; // 10 Sekunden -> Normale Abfrage\n    const lang = 18000; // 18 Sekunden -> Abfrage mit Warnung\n    const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n    const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n    const abfrageWetter = async () => {\n        let success = false;\n\n        while (!success) {\n            try {\n                const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=l%C3%A4rz&units=metric&&appid=4d1adda53bf636a53408d0cd1c5ba7b4');\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const weatherData = await response.json();\n                setDataWeather(weatherData);\n                success = true;  // Beende die Schleife, wenn die Abfrage erfolgreich war\n            } catch (error) {\n                console.error('Error fetching weather data:', error);\n                // Optional: Warte ein wenig, bevor du es erneut versuchst, um zu vermeiden, die API zu 체berlasten\n                await new Promise(resolve => setTimeout(resolve, 100));  // 5 Sekunden warten\n            }\n        }\n    };\n\n    // abfrageWetter();\n\n\n\n\n\n    // const abfrageWetter = async () => {\n    //     try {\n    //         const response = await fetch('https://api.openweathermap.org/data/2.5/weather?q=l%C3%A4rz&appid=4d1adda53bf636a53408d0cd1c5ba7b4');\n    //\n    //         if (!response.ok) {\n    //             throw new Error(`HTTP error! status: ${response.status}`);\n    //         }\n    //\n    //         const weatherData = await response.json();\n    //         setDataWeather(weatherData);\n    //     } catch (error) {\n    //         console.error('Error fetching weather data:', error);\n    //     }\n    // };\n    //\n    // // Erste Abfrage bei Start\n    // // abfrageWetter();\n\n// Wiederhole die Abfrage alle 30 Minuten\n    setInterval(abfrageWetter, 30 * 60 * 1000); // 30 Minuten in Millisekunden\n\n\nconsole.log(dataWeather);\n\n\n\n\n\n\n    // Lookup-Tabellen\n    const waitingSpot: Record<string, string> = {\n        bike: \"Fahrrad\",\n        bottle: \"Flasche\",\n        island: \"Insel\",\n        keys: \"Schl체ssel\",\n        kitchen: \"K체che\",\n        mic: \"Mikro\",\n        mobile: \"Mobile Zellen\",\n        sofa: \"Sofa\",\n        star: \"Stern\",\n        sun: \"Sonne\",\n        tent: \"Zelt\",\n        tree: \"Baum\",\n        turtle: \"Taube\",\n        window: \"bitte erfragen\"\n    };\n\n    const days: Record<string, string> = {\n        Mon: \"Mo, Mon\",\n        Tue: \"Di, Tue\",\n        Wed: \"Mi, Wed\",\n        Thu: \"Do, Thu\",\n        Fri: \"Fr, Fri\",\n        Sat: \"Sa, Sat\",\n        Sun: \"So, Sun\"\n    };\n\n\n    const resetLastScannedId = () => {\n        setLastScannedId(\"\");\n    };\n\n    // NFC-Reader\n    const handleScan = async (data: string) => {\n        if (data !== \"\" && data !== lastScannedId) {\n            setEingabe(data);\n            setLastScannedId(data);\n            await fetchData(data); // Warte auf die Datenabfrage, bevor du fortf채hrst\n            setAbfrage(true);\n\n            if (scanTimeout) {\n                clearTimeout(scanTimeout);\n            }\n            setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n        }\n    };\n\n    const handleError = (err: any) => {\n        console.error(err);\n    };\n\n    const fetchData = async (input: string) => {\n        try {\n            const trimmedInput = input.trim();\n            if (trimmedInput !== \"\") {\n                const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n\n                if (!ausgabeResponse.ok) {\n                    throw new Error('Fehler beim Abrufen der Schichtdaten');\n                }\n\n                const jsonData = await ausgabeResponse.json();\n                const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n                const jsonWarnung = await abfrageWarnung.json();\n\n                if (jsonWarnung.data && jsonWarnung.data.text) {\n                    const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n                    setWarnung(true);\n                    setWarnungText(textWithoutTags);\n                }\n\n                if (jsonData.data === null) {\n                    setNoData(true);\n                    setData(false);\n                    setWarnung(false);\n                } else {\n                    setData(jsonData);\n                }\n            }\n        } catch (error) {\n            console.error('Fehler beim Abrufen der Daten:', error);\n        }\n    };\n\n\n\n\n    useEffect(() => {\n        if (noData) {\n            const timer = setTimeout(() => {\n                setNoData(false);\n                setWarnung(false);\n                setAbfrage(false);\n            }, kurz); // 3 seconds\n            return () => clearTimeout(timer);\n        }\n\n        if (abfrage) {\n            const timeoutDauer = warnung ? lang : normal;\n            const timer = setTimeout(() => {\n                setAbfrage(false);\n                setWarnung(false);\n            }, timeoutDauer);\n            return () => clearTimeout(timer);\n        }\n\n    }, [abfrage, warnung, normal, lang, kurz, noData]);\n\n    return (\n        <div>\n            <div className={\"grundflaeche\"}>\n                <div className={!abfrage ? \"box\" : \"box boxleft\"}>\n                    {!abfrage ? (\n                        <>\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter:innen Shiftinformation</h3>\n                            <h4 className={\"deutsch\"}>Bitte halte dein B채ndsel unter den Scanner</h4>\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n                            <div className={\"wetter\"}>\n                                {dataWeather && dataWeather.weather && dataWeather.weather.length > 0 ? (\n                                    <div className={\"wetter-info\"}>\n                                        <p className={\"location\"}>{dataWeather.name}</p>\n                                        <p className={\"temperature\"}>{Math.round(dataWeather.main.temp)}째C</p>\n                                        <p className={\"weather-description\"}>{dataWeather.weather[0].description}</p>\n                                        <p className={\"wind-speed\"}>Wind: {dataWeather.wind.speed} m/s</p>\n                                        {/*<p className={\"visibility\"}>Visibility: {dataWeather.visibility} m</p>*/}\n                                        <p></p>\n                                    </div>\n                                ) : null}\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            {warnung && (\n                                <div className={\"scroll-container\"}>\n                                    <div className={\"warnung\"}>\n                                        <div className={\"warnung-text\"}>{warnungText}</div>\n                                    </div>\n                                </div>\n                            )}\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter:innen Shiftinformation</h3>\n                            {data ? (\n                                <>\n                                    <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n                                    <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n                                    {data.data && data.data.length > 0 ? (\n                                        data.data\n                                            .filter((entry: any) => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\n                                            .sort((a: any, b: any) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\n                                            .slice(0, 3)\n                                            .map((entry: any, index: number) => (\n                                                <div className={\"ausgabeabfrage\"} key={index}>\n                                                    <p className={\"index\"}>{index + 1}</p>\n                                                    <p className={\"days\"}><strong>{days[dayjs(entry.startAt).format('ddd')]}</strong> // {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\n                                                    <p className={\"place\"}><img src={Vector} alt=\"Vector\" className=\"Vector\" /> &nbsp; &nbsp; &nbsp;  {waitingSpot[entry.waitingSpot]}</p>\n                                                    <br />\n                                                </div>\n                                            ))\n                                    ) : (\n                                        <p></p>\n                                    )}\n                                </>\n                            ) : (\n                                noData && (\n                                    <>\n                                        <h4 className={\"deutsch-ausgabe-no\"}>Keine Informationen</h4>\n                                        <h5 className={\"englisch-ausgabe-no\"}>No Information</h5>\n                                    </>\n                                )\n                            )}\n                        </>\n                    )}\n                </div>\n                <img src={Karte} alt={\"Karte\"} className={`Karte${abfrage ? ' in' : ''}`} />\n                <img src={Pfeil} alt={\"Pfeil\"} className={`Pfeil ${abfrage ? 'ok' : ''}`}/>\n                <img src={Beschriftung} alt={\"Beschriftung\"} className={`Beschriftung ${abfrage ? 'ko' : ''}`}/>\n            </div>\n            <button onClick={abfrageWetter}>Wetter</button>\n\n            <div className={\"wip\"}>\n                <BarcodeReader\n                    onError={handleError}\n                    onScan={handleScan}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}