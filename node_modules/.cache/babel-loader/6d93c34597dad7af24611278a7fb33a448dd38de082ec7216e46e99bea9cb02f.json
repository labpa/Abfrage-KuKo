{"ast":null,"code":"var _jsxFileName = \"/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\n// import benzel from '../src/images/app/grafik 1.png';\nimport benzel from '../src/images/app/supporter-benzel.png';\n// import benzel from '../src/images/app/supporter-benzel-zwei.png'\nimport Vector from '../src/images/app/Vector.png';\n// import Karte from '../src/images/app/map.png';\n// import KarteNeu from '../src/images/app/map-startpage.png';\n// import Karte from '../src/images/app/sup_karte.png';\nimport Karte from '../src/images/app/zuschnitt-karte.png';\nimport BarcodeReader from 'react-barcode-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [dataWeather, setDataWeather] = useState(null);\n  const [eingabe, setEingabe] = useState(\"\");\n  const [abfrage, setAbfrage] = useState(false);\n  const [warnung, setWarnung] = useState(false);\n  const [warnungText, setWarnungText] = useState(null);\n  const exampleDate = dayjs('2023.01.01');\n  // const exampleDate = dayjs('now');\n  const [noData, setNoData] = useState(false);\n  const [lastScannedId, setLastScannedId] = useState(\"\");\n  const [scanTimeout, setScanTimeout] = useState(null);\n\n  // Zeitangabe Anzeige Abfrage\n  const normal = 15000; // 15 Sekunden -> Normale Abfrage\n  const lang = 20000; // 20 Sekunden -> Abfrage mit Warnung\n  const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n  const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n  // Lookup-Tabellen\n  const waitingSpot = {\n    bike: \"Fahrrad\",\n    bottle: \"Flasche\",\n    island: \"Insel\",\n    keys: \"Schlüssel\",\n    kitchen: \"Küche\",\n    mic: \"Mikro\",\n    mobile: \"Mobile Zellen\",\n    sofa: \"Sofa\",\n    star: \"Stern\",\n    sun: \"Sonne\",\n    tent: \"Zelt\",\n    tree: \"Baum\",\n    turtle: \"Taube\",\n    window: \"bitte erfragen\"\n  };\n  const days = {\n    Mon: \"Mo, Mon\",\n    Tue: \"Di, Tue\",\n    Wed: \"Mi, Wed\",\n    Thu: \"Do, Thu\",\n    Fri: \"Fr, Fri\",\n    Sat: \"Sa, Sat\",\n    Sun: \"So, Sun\"\n  };\n  const resetLastScannedId = () => {\n    setLastScannedId(\"\");\n  };\n\n  // NFC-Reader\n  const handleScan = async data => {\n    if (data !== \"\" && data !== lastScannedId) {\n      setEingabe(data);\n      setLastScannedId(data);\n      await fetchData(data); // Warte auf die Datenabfrage, bevor du fortfährst\n      setAbfrage(true);\n      if (scanTimeout) {\n        clearTimeout(scanTimeout);\n      }\n      setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  const fetchData = async input => {\n    try {\n      const trimmedInput = input.trim();\n      if (trimmedInput !== \"\") {\n        const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n        if (!ausgabeResponse.ok) {\n          throw new Error('Fehler beim Abrufen der Schichtdaten');\n        }\n        const jsonData = await ausgabeResponse.json();\n        const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n        const jsonWarnung = await abfrageWarnung.json();\n        if (jsonWarnung.data && jsonWarnung.data.text) {\n          const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n          setWarnung(true);\n          setWarnungText(textWithoutTags);\n        }\n        if (jsonData.data === null) {\n          setNoData(true);\n          setData(false);\n          setWarnung(false);\n        } else {\n          setData(jsonData);\n        }\n      }\n    } catch (error) {\n      console.error('Fehler beim Abrufen der Daten:', error);\n    }\n  };\n\n  //Wetter Daten werden Geladen\n  const fetchWeatherData = async () => {\n    const apiKey = '4d1adda53bf636a53408d0cd1c5ba7b4';\n    const apiUrl = 'https://api.openweathermap.org/data/2.5/weather';\n    const city = 'Lärz';\n    const units = 'metric';\n    const url = `${apiUrl}?q=${encodeURIComponent(city)}&units=${units}&appid=${apiKey}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch weather data');\n      }\n      const abfrageWetter = await response.json();\n      setDataWeather(abfrageWetter);\n      // console.log('Weather data:', abfrageWetter);\n      return abfrageWetter;\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      throw error;\n    }\n  };\n\n  // Funktion, die alle 20 Minuten die Daten aktualisiert\n  const fetchWeatherPeriodically = () => {\n    const interval = setInterval(async () => {\n      try {\n        await fetchWeatherData();\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    }, 15 * 60 * 1000); // 15 Minuten in Millisekunden umgerechnet\n\n    // Initialen Aufruf außerhalb des Intervals\n    fetchWeatherData();\n\n    // Rückgabe einer Funktion zum Beenden des Intervals, falls nötig\n    return () => clearInterval(interval);\n  };\n\n  // useEffect Wetter\n  useEffect(() => {\n    fetchWeatherPeriodically();\n  }, []);\n\n  // useEffect Zeit der Abfrage\n  useEffect(() => {\n    if (noData) {\n      const timer = setTimeout(() => {\n        setNoData(false);\n        setWarnung(false);\n        setAbfrage(false);\n      }, kurz); // 3 seconds\n      return () => clearTimeout(timer);\n    }\n    if (abfrage) {\n      const timeoutDauer = warnung ? lang : normal;\n      const timer = setTimeout(() => {\n        setAbfrage(false);\n        setWarnung(false);\n      }, timeoutDauer);\n      return () => clearTimeout(timer);\n    }\n  }, [abfrage, warnung, normal, lang, kurz, noData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grundflaeche\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !abfrage ? \"box\" : \"box boxleft\",\n        children: !abfrage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Supporter:innen Schichtauskunft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Supporter Shiftinformation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"deutsch\",\n            children: \"Bitte halte dein B\\xE4ndsel unter den Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"englisch\",\n            children: \"Please hold your wristband under the scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: benzel,\n            alt: \"benzel\",\n            className: \"benzel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wetter\",\n            children: dataWeather && dataWeather.weather && dataWeather.weather.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wetter-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"location\",\n                children: dataWeather.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"logo\",\n                src: `https://openweathermap.org/img/wn/${dataWeather.weather[0].icon}@2x.png`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"weather-description\",\n                children: dataWeather.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"temperature\",\n                children: [\"Temperature: \", Math.round(dataWeather.main.temp), \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"feels-like\",\n                children: [\"Feels like: \", Math.round(dataWeather.main.feels_like), \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wind-speed\",\n                children: [\"Wind: \", dataWeather.wind.speed, \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [warnung && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warnung\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"warnung-text\",\n                children: warnungText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"deutsch-ausgabe\",\n              children: \"Deine Schichten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"englisch-ausgabe\",\n              children: \"Your Shifts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this), data.data && data.data.length > 0 ? data.data.filter(entry => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day')).sort((a, b) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate)).slice(0, 3).map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ausgabeabfrage\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"main-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"index\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"days\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: days[dayjs(entry.startAt).format('ddd')]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 79\n                  }, this), \" // \", dayjs(entry.startAt).format('DD.MM - HH:mm')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"place\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Vector,\n                    alt: \"Vector\",\n                    className: \"Vector\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 80\n                  }, this), \" \\xA0 \\xA0 \\xA0  \", waitingSpot[entry.waitingSpot]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"needs\",\n                children: \"Das hier sollten maximal 50 Zeichen sein 123456789\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 53\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 49\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : noData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noDataLeft\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"deutsch-ausgabe-no\",\n              children: \"Keine Informationen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"englisch-ausgabe-no\",\n              children: \"No Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dreieckSupportercare${abfrage ? ' left' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `supportercare${abfrage ? ' left' : ''}`,\n        children: \"Supporter:innen Care\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dreieckCheckin${abfrage ? ' left' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `checkin${abfrage ? ' left' : ''}`,\n        children: \"Supporter:innen Check-In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Karte,\n        alt: \"Karte\",\n        className: `Karte${abfrage ? ' left' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wip\",\n      children: /*#__PURE__*/_jsxDEV(BarcodeReader, {\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"efJqAiDufpH/Uj/epa7UPuQef+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","BarcodeReader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","dataWeather","setDataWeather","eingabe","setEingabe","abfrage","setAbfrage","warnung","setWarnung","warnungText","setWarnungText","exampleDate","noData","setNoData","lastScannedId","setLastScannedId","scanTimeout","setScanTimeout","normal","lang","kurz","resetTime","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","resetLastScannedId","handleScan","fetchData","clearTimeout","setTimeout","handleError","err","console","error","input","trimmedInput","trim","ausgabeResponse","fetch","ok","Error","jsonData","json","abfrageWarnung","jsonWarnung","text","textWithoutTags","replace","fetchWeatherData","apiKey","apiUrl","city","units","url","encodeURIComponent","response","abfrageWetter","fetchWeatherPeriodically","interval","setInterval","clearInterval","timer","timeoutDauer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","weather","length","name","icon","description","Math","round","main","temp","feels_like","wind","speed","filter","entry","startAt","isAfter","isSame","sort","a","b","diff","slice","map","index","format","onError","onScan","_c","$RefreshReg$"],"sources":["/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\n// import benzel from '../src/images/app/grafik 1.png';\nimport benzel from '../src/images/app/supporter-benzel.png'\n// import benzel from '../src/images/app/supporter-benzel-zwei.png'\nimport Vector from '../src/images/app/Vector.png';\n// import Karte from '../src/images/app/map.png';\n// import KarteNeu from '../src/images/app/map-startpage.png';\n// import Karte from '../src/images/app/sup_karte.png';\nimport Karte from '../src/images/app/zuschnitt-karte.png'\nimport Pfeil from '../src/images/app/pfeil.png';\nimport Beschriftung from '../src/images/app/beschriftung.png';\nimport BarcodeReader from 'react-barcode-reader';\n\n\nconst App: FC = () => {\n    const [data, setData] = useState<any>(null);\n    const [dataWeather, setDataWeather] = useState<any>(null);\n    const [eingabe, setEingabe] = useState<string>(\"\");\n    const [abfrage, setAbfrage] = useState<boolean>(false);\n    const [warnung, setWarnung] = useState<boolean>(false);\n    const [warnungText, setWarnungText] = useState<string | null>(null);\n    const exampleDate = dayjs('2023.01.01');\n    // const exampleDate = dayjs('now');\n    const [noData, setNoData] = useState<boolean>(false);\n    const [lastScannedId, setLastScannedId] = useState<string>(\"\");\n    const [scanTimeout, setScanTimeout] = useState<NodeJS.Timeout | null>(null);\n\n    // Zeitangabe Anzeige Abfrage\n    const normal = 15000; // 15 Sekunden -> Normale Abfrage\n    const lang = 20000; // 20 Sekunden -> Abfrage mit Warnung\n    const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n    const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n\n\n\n    // Lookup-Tabellen\n    const waitingSpot: Record<string, string> = {\n        bike: \"Fahrrad\",\n        bottle: \"Flasche\",\n        island: \"Insel\",\n        keys: \"Schlüssel\",\n        kitchen: \"Küche\",\n        mic: \"Mikro\",\n        mobile: \"Mobile Zellen\",\n        sofa: \"Sofa\",\n        star: \"Stern\",\n        sun: \"Sonne\",\n        tent: \"Zelt\",\n        tree: \"Baum\",\n        turtle: \"Taube\",\n        window: \"bitte erfragen\"\n    };\n\n    const days: Record<string, string> = {\n        Mon: \"Mo, Mon\",\n        Tue: \"Di, Tue\",\n        Wed: \"Mi, Wed\",\n        Thu: \"Do, Thu\",\n        Fri: \"Fr, Fri\",\n        Sat: \"Sa, Sat\",\n        Sun: \"So, Sun\"\n    };\n\n\n    const resetLastScannedId = () => {\n        setLastScannedId(\"\");\n    };\n\n    // NFC-Reader\n    const handleScan = async (data: string) => {\n        if (data !== \"\" && data !== lastScannedId) {\n            setEingabe(data);\n            setLastScannedId(data);\n            await fetchData(data); // Warte auf die Datenabfrage, bevor du fortfährst\n            setAbfrage(true);\n\n            if (scanTimeout) {\n                clearTimeout(scanTimeout);\n            }\n            setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n        }\n    };\n\n    const handleError = (err: any) => {\n        console.error(err);\n    };\n\n    const fetchData = async (input: string) => {\n        try {\n            const trimmedInput = input.trim();\n            if (trimmedInput !== \"\") {\n                const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n\n                if (!ausgabeResponse.ok) {\n                    throw new Error('Fehler beim Abrufen der Schichtdaten');\n                }\n\n                const jsonData = await ausgabeResponse.json();\n                const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n                const jsonWarnung = await abfrageWarnung.json();\n\n                if (jsonWarnung.data && jsonWarnung.data.text) {\n                    const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n                    setWarnung(true);\n                    setWarnungText(textWithoutTags);\n                }\n\n                if (jsonData.data === null) {\n                    setNoData(true);\n                    setData(false);\n                    setWarnung(false);\n                } else {\n                    setData(jsonData);\n                }\n            }\n        } catch (error) {\n            console.error('Fehler beim Abrufen der Daten:', error);\n        }\n    };\n\n\n    //Wetter Daten werden Geladen\n    const fetchWeatherData = async () => {\n        const apiKey = '4d1adda53bf636a53408d0cd1c5ba7b4';\n        const apiUrl = 'https://api.openweathermap.org/data/2.5/weather';\n        const city = 'Lärz';\n        const units = 'metric';\n\n        const url = `${apiUrl}?q=${encodeURIComponent(city)}&units=${units}&appid=${apiKey}`;\n\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Failed to fetch weather data');\n            }\n            const abfrageWetter = await response.json();\n            setDataWeather(abfrageWetter);\n            // console.log('Weather data:', abfrageWetter);\n            return abfrageWetter;\n        } catch (error) {\n            console.error('Error fetching weather data:', error);\n            throw error;\n        }\n    };\n\n    // Funktion, die alle 20 Minuten die Daten aktualisiert\n    const fetchWeatherPeriodically = () => {\n        const interval = setInterval(async () => {\n            try {\n                await fetchWeatherData();\n            } catch (error) {\n                console.error('Error fetching weather data:', error);\n            }\n        }, 15 * 60 * 1000); // 15 Minuten in Millisekunden umgerechnet\n\n        // Initialen Aufruf außerhalb des Intervals\n        fetchWeatherData();\n\n        // Rückgabe einer Funktion zum Beenden des Intervals, falls nötig\n        return () => clearInterval(interval);\n    };\n\n\n    // useEffect Wetter\n    useEffect(() => {\n        fetchWeatherPeriodically();\n    }, []);\n\n\n    // useEffect Zeit der Abfrage\n    useEffect(() => {\n        if (noData) {\n            const timer = setTimeout(() => {\n                setNoData(false);\n                setWarnung(false);\n                setAbfrage(false);\n            }, kurz); // 3 seconds\n            return () => clearTimeout(timer);\n        }\n\n        if (abfrage) {\n            const timeoutDauer = warnung ? lang : normal;\n            const timer = setTimeout(() => {\n                setAbfrage(false);\n                setWarnung(false);\n            }, timeoutDauer);\n            return () => clearTimeout(timer);\n        }\n\n    }, [abfrage, warnung, normal, lang, kurz, noData]);\n\n    return (\n        <div>\n            <div className={\"grundflaeche\"}>\n                <div className={!abfrage ? \"box\" : \"box boxleft\"}>\n                    {!abfrage ? (\n                        <>\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter Shiftinformation</h3>\n                            <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n                            <div className={\"wetter\"}>\n                                {dataWeather && dataWeather.weather && dataWeather.weather.length > 0 ? (\n                                    <div className={\"wetter-info\"}>\n                                        <p className={\"location\"}>{dataWeather.name}</p>\n                                        <img\n                                            className={\"logo\"}\n                                            src={`https://openweathermap.org/img/wn/${dataWeather.weather[0].icon}@2x.png`}\n                                            alt={\"\"}\n                                        />\n                                        <p className={\"weather-description\"}>{dataWeather.weather[0].description}</p>\n                                        <p className={\"temperature\"}>Temperature: {Math.round(dataWeather.main.temp)} °C</p>\n                                        <p className={\"feels-like\"}>Feels like: {Math.round(dataWeather.main.feels_like)} °C</p>\n                                        <p className={\"wind-speed\"}>Wind: {dataWeather.wind.speed} m/s</p>\n                                    </div>\n                                ) : null}\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            {warnung && (\n                                <div className={\"scroll-container\"}>\n                                    <div className={\"warnung\"}>\n                                        <div className={\"warnung-text\"}>{warnungText}</div>\n                                    </div>\n                                </div>\n                            )}\n                            {data ? (\n                                <>\n                                    <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n                                    <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n                                    {data.data && data.data.length > 0 ? (\n                                        data.data\n                                            .filter((entry: any) => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\n                                            .sort((a: any, b: any) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\n                                            .slice(0, 3)\n                                            .map((entry: any, index: number) => (\n                                                <div className={\"ausgabeabfrage\"} key={index}>\n                                                    <div className=\"main-content\">\n                                                        <p className={\"index\"}>{index + 1}</p>\n                                                        <p className={\"days\"}><strong>{days[dayjs(entry.startAt).format('ddd')]}</strong> // {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\n                                                        <p className={\"place\"}><img src={Vector} alt=\"Vector\" className=\"Vector\" /> &nbsp; &nbsp; &nbsp;  {waitingSpot[entry.waitingSpot]}</p>\n                                                    </div>\n                                                    <p className={\"needs\"}>Das hier sollten maximal 50 Zeichen sein 123456789</p>\n                                                    {/*<br />*/}\n                                                </div>\n                                            ))\n                                    ) : (\n                                        <p></p>\n                                    )}\n                                </>\n                            ) : (\n                                noData  && (\n                                    <div className={\"noDataLeft\"}>\n                                        <h4 className={\"deutsch-ausgabe-no\"}>Keine Informationen</h4>\n                                        <h5 className={\"englisch-ausgabe-no\"}>No Information</h5>\n                                    </div>\n\n                                )\n                            )}\n                        </>\n                    )}\n                </div>\n                <div className={`dreieckSupportercare${abfrage ? ' left' : ''}`}></div>\n                <div className={`supportercare${abfrage ? ' left' : ''}`}>Supporter:innen Care</div>\n                <div className={`dreieckCheckin${abfrage ? ' left' : ''}`}></div>\n                <div className={`checkin${abfrage ? ' left' : ''}`}>Supporter:innen Check-In</div>\n                <img src={Karte} alt={\"Karte\"} className={`Karte${abfrage ? ' left' : ''}`} />\n\n            </div>\n            {/*<button onClick={abfrageWetter}>Wetter</button>*/}\n\n            <div className={\"wip\"}>\n                <BarcodeReader\n                    onError={handleError}\n                    onScan={handleScan}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}