{"ast":null,"code":"import React,{useEffect,useState}from'react';import dayjs from\"dayjs\";import'./css/App.css';import benzel from'../src/images/app/grafik 1.png';import Vector from'../src/images/app/Vector.png';import Karte from'../src/images/app/map.png';import KarteStartpage from'../src/images/app/map-startpage.png';import Pfeil from'../src/images/app/pfeil.png';import Beschriftung from'../src/images/app/beschriftung.png';import BarcodeReader from'react-barcode-reader';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[data,setData]=useState(null);const[dataWeather,setDataWeather]=useState(null);const[eingabe,setEingabe]=useState(\"\");const[abfrage,setAbfrage]=useState(false);const[warnung,setWarnung]=useState(false);const[warnungText,setWarnungText]=useState(null);const exampleDate=dayjs('2023.01.01');const[noData,setNoData]=useState(false);// const [zaehler, setZaehler] = useState<number>(0);\nconst[lastScannedId,setLastScannedId]=useState(\"\");const[scanTimeout,setScanTimeout]=useState(null);// Zeitangabe Anzeige Abfrage\nconst normal=15000;// 15 Sekunden -> Normale Abfrage\nconst lang=20000;// 20 Sekunden -> Abfrage mit Warnung\nconst kurz=3000;// 3 Sekunden -> Abfrage Falsche ID\nconst resetTime=15000;// 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n//Wetter Daten werden Geladen\nconst fetchWeatherData=async()=>{const apiKey='4d1adda53bf636a53408d0cd1c5ba7b4';const apiUrl='https://api.openweathermap.org/data/2.5/weather';const city='Lärz';const units='metric';const url=\"\".concat(apiUrl,\"?q=\").concat(encodeURIComponent(city),\"&units=\").concat(units,\"&appid=\").concat(apiKey);try{const response=await fetch(url);if(!response.ok){throw new Error('Failed to fetch weather data');}const abfrageWetter=await response.json();setDataWeather(abfrageWetter);// console.log('Weather data:', abfrageWetter);\nreturn abfrageWetter;}catch(error){console.error('Error fetching weather data:',error);throw error;}};// Funktion, die alle 20 Minuten die Daten aktualisiert\nconst fetchWeatherPeriodically=()=>{const interval=setInterval(async()=>{try{await fetchWeatherData();}catch(error){console.error('Error fetching weather data:',error);}},20*60*1000);// 20 Minuten in Millisekunden umgerechnet\n// Initialen Aufruf außerhalb des Intervals\nfetchWeatherData();// Rückgabe einer Funktion zum Beenden des Intervals, falls nötig\nreturn()=>clearInterval(interval);};useEffect(()=>{fetchWeatherPeriodically();},[]);// Lookup-Tabellen\nconst waitingSpot={bike:\"Fahrrad\",bottle:\"Flasche\",island:\"Insel\",keys:\"Schlüssel\",kitchen:\"Küche\",mic:\"Mikro\",mobile:\"Mobile Zellen\",sofa:\"Sofa\",star:\"Stern\",sun:\"Sonne\",tent:\"Zelt\",tree:\"Baum\",turtle:\"Taube\",window:\"bitte erfragen\"};const days={Mon:\"Mo, Mon\",Tue:\"Di, Tue\",Wed:\"Mi, Wed\",Thu:\"Do, Thu\",Fri:\"Fr, Fri\",Sat:\"Sa, Sat\",Sun:\"So, Sun\"};const resetLastScannedId=()=>{setLastScannedId(\"\");};// NFC-Reader\nconst handleScan=async data=>{if(data!==\"\"&&data!==lastScannedId){setEingabe(data);setLastScannedId(data);await fetchData(data);// Warte auf die Datenabfrage, bevor du fortfährst\nsetAbfrage(true);if(scanTimeout){clearTimeout(scanTimeout);}setScanTimeout(setTimeout(resetLastScannedId,resetTime));}};const handleError=err=>{console.error(err);};const fetchData=async input=>{try{const trimmedInput=input.trim();if(trimmedInput!==\"\"){const ausgabeResponse=await fetch(\"https://supporter.kulturkosmos.de/api/self-service/shifts/\".concat(trimmedInput));if(!ausgabeResponse.ok){throw new Error('Fehler beim Abrufen der Schichtdaten');}const jsonData=await ausgabeResponse.json();const abfrageWarnung=await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');const jsonWarnung=await abfrageWarnung.json();if(jsonWarnung.data&&jsonWarnung.data.text){const textWithoutTags=jsonWarnung.data.text.replace(/<[^>]*>/g,' ');setWarnung(true);setWarnungText(textWithoutTags);}if(jsonData.data===null){setNoData(true);setData(false);setWarnung(false);}else{setData(jsonData);}}}catch(error){console.error('Fehler beim Abrufen der Daten:',error);}};// useEffect(() => {\n//     if (noData) {\n//         const timer = setTimeout(() => {\n//             setNoData(false);\n//             setWarnung(false);\n//             setAbfrage(false);\n//         }, kurz); // 3 seconds\n//         return () => clearTimeout(timer);\n//     }\n//\n//     if (abfrage) {\n//         const timeoutDauer = warnung ? lang : normal;\n//         const timer = setTimeout(() => {\n//             setAbfrage(false);\n//             setWarnung(false);\n//         }, timeoutDauer);\n//         return () => clearTimeout(timer);\n//     }\n//\n// }, [abfrage, warnung, normal, lang, kurz, noData]);\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grundflaeche\",children:[/*#__PURE__*/_jsx(\"div\",{className:!abfrage?\"box\":\"box boxleft\",children:!abfrage?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Supporter:innen Schichtauskunft\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Supporter Shiftinformation\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"deutsch\",children:\"Bitte halte dein B\\xE4ndsel unter den Scanner\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"englisch\",children:\"Please hold your wristband under the scanner\"}),/*#__PURE__*/_jsx(\"img\",{src:benzel,alt:\"benzel\",className:\"benzel\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wetter\",children:dataWeather&&dataWeather.weather&&dataWeather.weather.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"wetter-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"location\",children:dataWeather.name}),/*#__PURE__*/_jsx(\"img\",{className:\"logo\",src:\"https://openweathermap.org/img/wn/\".concat(dataWeather.weather[0].icon,\"@2x.png\"),alt:\"\"}),/*#__PURE__*/_jsx(\"p\",{className:\"weather-description\",children:dataWeather.weather[0].description}),/*#__PURE__*/_jsxs(\"p\",{className:\"temperature\",children:[\"Temperature: \",Math.round(dataWeather.main.temp),\" \\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"feels-like\",children:[\"Feels like: \",Math.round(dataWeather.main.feels_like),\" \\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"wind-speed\",children:[\"Wind: \",dataWeather.wind.speed,\" m/s\"]})]}):null}),/*#__PURE__*/_jsx(\"img\",{src:KarteStartpage,alt:\"KarteStartpage\",className:\"option-karte\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[warnung&&/*#__PURE__*/_jsx(\"div\",{className:\"scroll-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"warnung\",children:/*#__PURE__*/_jsx(\"div\",{className:\"warnung-text\",children:warnungText})})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Supporter:innen Schichtauskunft\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Supporter Shiftinformation\"}),data?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"deutsch-ausgabe\",children:\"Deine Schichten\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"englisch-ausgabe\",children:\"Your Shifts\"}),data.data&&data.data.length>0?data.data.filter(entry=>dayjs(entry.startAt).isAfter(exampleDate)||dayjs(entry.startAt).isSame(exampleDate,'day')).sort((a,b)=>dayjs(a.startAt).diff(exampleDate)-dayjs(b.startAt).diff(exampleDate)).slice(0,3).map((entry,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"ausgabeabfrage\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"index\",children:index+1}),/*#__PURE__*/_jsxs(\"p\",{className:\"days\",children:[/*#__PURE__*/_jsx(\"strong\",{children:days[dayjs(entry.startAt).format('ddd')]}),\" // \",dayjs(entry.startAt).format('DD.MM - HH:mm')]}),/*#__PURE__*/_jsxs(\"p\",{className:\"place\",children:[/*#__PURE__*/_jsx(\"img\",{src:Vector,alt:\"Vector\",className:\"Vector\"}),\" \\xA0 \\xA0 \\xA0  \",waitingSpot[entry.waitingSpot]]}),/*#__PURE__*/_jsx(\"p\",{className:\"needs\",children:\"Das hier sollten maximal 50 Zeichen sein 123456789\"}),/*#__PURE__*/_jsx(\"br\",{})]},index)):/*#__PURE__*/_jsx(\"p\",{})]}):noData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"deutsch-ausgabe-no\",children:\"Keine Informationen\"}),/*#__PURE__*/_jsx(\"h5\",{className:\"englisch-ausgabe-no\",children:\"No Information\"})]})]})}),/*#__PURE__*/_jsx(\"img\",{src:Karte,alt:\"Karte\",className:\"Karte\".concat(abfrage?' in':'')}),/*#__PURE__*/_jsx(\"img\",{src:Pfeil,alt:\"Pfeil\",className:\"Pfeil \".concat(abfrage?'ok':'')}),/*#__PURE__*/_jsx(\"img\",{src:Beschriftung,alt:\"Beschriftung\",className:\"Beschriftung \".concat(abfrage?'ko':'')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wip\",children:/*#__PURE__*/_jsx(BarcodeReader,{onError:handleError,onScan:handleScan})})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","dayjs","benzel","Vector","Karte","KarteStartpage","Pfeil","Beschriftung","BarcodeReader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","data","setData","dataWeather","setDataWeather","eingabe","setEingabe","abfrage","setAbfrage","warnung","setWarnung","warnungText","setWarnungText","exampleDate","noData","setNoData","lastScannedId","setLastScannedId","scanTimeout","setScanTimeout","normal","lang","kurz","resetTime","fetchWeatherData","apiKey","apiUrl","city","units","url","concat","encodeURIComponent","response","fetch","ok","Error","abfrageWetter","json","error","console","fetchWeatherPeriodically","interval","setInterval","clearInterval","waitingSpot","bike","bottle","island","keys","kitchen","mic","mobile","sofa","star","sun","tent","tree","turtle","window","days","Mon","Tue","Wed","Thu","Fri","Sat","Sun","resetLastScannedId","handleScan","fetchData","clearTimeout","setTimeout","handleError","err","input","trimmedInput","trim","ausgabeResponse","jsonData","abfrageWarnung","jsonWarnung","text","textWithoutTags","replace","children","className","src","alt","weather","length","name","icon","description","Math","round","main","temp","feels_like","wind","speed","filter","entry","startAt","isAfter","isSame","sort","a","b","diff","slice","map","index","format","onError","onScan"],"sources":["/home/pascal/Projekte/abfrage-api-supporter/src/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport dayjs from \"dayjs\";\nimport './css/App.css';\nimport benzel from '../src/images/app/grafik 1.png';\nimport Vector from '../src/images/app/Vector.png';\nimport Karte from '../src/images/app/map.png';\nimport KarteStartpage from '../src/images/app/map-startpage.png'\nimport Pfeil from '../src/images/app/pfeil.png';\nimport Beschriftung from '../src/images/app/beschriftung.png';\nimport BarcodeReader from 'react-barcode-reader';\n\n\nconst App: FC = () => {\n    const [data, setData] = useState<any>(null);\n    const [dataWeather, setDataWeather] = useState<any>(null);\n    const [eingabe, setEingabe] = useState<string>(\"\");\n    const [abfrage, setAbfrage] = useState<boolean>(false);\n    const [warnung, setWarnung] = useState<boolean>(false);\n    const [warnungText, setWarnungText] = useState<string | null>(null);\n    const exampleDate = dayjs('2023.01.01');\n    const [noData, setNoData] = useState<boolean>(false);\n    // const [zaehler, setZaehler] = useState<number>(0);\n    const [lastScannedId, setLastScannedId] = useState<string>(\"\");\n    const [scanTimeout, setScanTimeout] = useState<NodeJS.Timeout | null>(null);\n\n    // Zeitangabe Anzeige Abfrage\n    const normal = 15000; // 15 Sekunden -> Normale Abfrage\n    const lang = 20000; // 20 Sekunden -> Abfrage mit Warnung\n    const kurz = 3000; // 3 Sekunden -> Abfrage Falsche ID\n    const resetTime = 15000; // 15 Sekunden -> Zeit nach der eine ID wieder gescannt werden kann\n\n    //Wetter Daten werden Geladen\n    const fetchWeatherData = async () => {\n        const apiKey = '4d1adda53bf636a53408d0cd1c5ba7b4';\n        const apiUrl = 'https://api.openweathermap.org/data/2.5/weather';\n        const city = 'Lärz';\n        const units = 'metric';\n\n        const url = `${apiUrl}?q=${encodeURIComponent(city)}&units=${units}&appid=${apiKey}`;\n\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Failed to fetch weather data');\n            }\n            const abfrageWetter = await response.json();\n            setDataWeather(abfrageWetter);\n            // console.log('Weather data:', abfrageWetter);\n            return abfrageWetter;\n        } catch (error) {\n            console.error('Error fetching weather data:', error);\n            throw error;\n        }\n    };\n\n// Funktion, die alle 20 Minuten die Daten aktualisiert\n    const fetchWeatherPeriodically = () => {\n        const interval = setInterval(async () => {\n            try {\n                await fetchWeatherData();\n            } catch (error) {\n                console.error('Error fetching weather data:', error);\n            }\n        }, 20 * 60 * 1000); // 20 Minuten in Millisekunden umgerechnet\n\n        // Initialen Aufruf außerhalb des Intervals\n        fetchWeatherData();\n\n        // Rückgabe einer Funktion zum Beenden des Intervals, falls nötig\n        return () => clearInterval(interval);\n    };\n\n    useEffect(() => {\n        fetchWeatherPeriodically();\n    }, []);\n\n\n    // Lookup-Tabellen\n    const waitingSpot: Record<string, string> = {\n        bike: \"Fahrrad\",\n        bottle: \"Flasche\",\n        island: \"Insel\",\n        keys: \"Schlüssel\",\n        kitchen: \"Küche\",\n        mic: \"Mikro\",\n        mobile: \"Mobile Zellen\",\n        sofa: \"Sofa\",\n        star: \"Stern\",\n        sun: \"Sonne\",\n        tent: \"Zelt\",\n        tree: \"Baum\",\n        turtle: \"Taube\",\n        window: \"bitte erfragen\"\n    };\n\n    const days: Record<string, string> = {\n        Mon: \"Mo, Mon\",\n        Tue: \"Di, Tue\",\n        Wed: \"Mi, Wed\",\n        Thu: \"Do, Thu\",\n        Fri: \"Fr, Fri\",\n        Sat: \"Sa, Sat\",\n        Sun: \"So, Sun\"\n    };\n\n\n    const resetLastScannedId = () => {\n        setLastScannedId(\"\");\n    };\n\n    // NFC-Reader\n    const handleScan = async (data: string) => {\n        if (data !== \"\" && data !== lastScannedId) {\n            setEingabe(data);\n            setLastScannedId(data);\n            await fetchData(data); // Warte auf die Datenabfrage, bevor du fortfährst\n            setAbfrage(true);\n\n            if (scanTimeout) {\n                clearTimeout(scanTimeout);\n            }\n            setScanTimeout(setTimeout(resetLastScannedId, resetTime));\n        }\n    };\n\n    const handleError = (err: any) => {\n        console.error(err);\n    };\n\n    const fetchData = async (input: string) => {\n        try {\n            const trimmedInput = input.trim();\n            if (trimmedInput !== \"\") {\n                const ausgabeResponse = await fetch(`https://supporter.kulturkosmos.de/api/self-service/shifts/${trimmedInput}`);\n\n                if (!ausgabeResponse.ok) {\n                    throw new Error('Fehler beim Abrufen der Schichtdaten');\n                }\n\n                const jsonData = await ausgabeResponse.json();\n                const abfrageWarnung = await fetch('https://supporter.kulturkosmos.de/api/self-service/special-information');\n                const jsonWarnung = await abfrageWarnung.json();\n\n                if (jsonWarnung.data && jsonWarnung.data.text) {\n                    const textWithoutTags = jsonWarnung.data.text.replace(/<[^>]*>/g, ' ');\n                    setWarnung(true);\n                    setWarnungText(textWithoutTags);\n                }\n\n                if (jsonData.data === null) {\n                    setNoData(true);\n                    setData(false);\n                    setWarnung(false);\n                } else {\n                    setData(jsonData);\n                }\n            }\n        } catch (error) {\n            console.error('Fehler beim Abrufen der Daten:', error);\n        }\n    };\n\n    // useEffect(() => {\n    //     if (noData) {\n    //         const timer = setTimeout(() => {\n    //             setNoData(false);\n    //             setWarnung(false);\n    //             setAbfrage(false);\n    //         }, kurz); // 3 seconds\n    //         return () => clearTimeout(timer);\n    //     }\n    //\n    //     if (abfrage) {\n    //         const timeoutDauer = warnung ? lang : normal;\n    //         const timer = setTimeout(() => {\n    //             setAbfrage(false);\n    //             setWarnung(false);\n    //         }, timeoutDauer);\n    //         return () => clearTimeout(timer);\n    //     }\n    //\n    // }, [abfrage, warnung, normal, lang, kurz, noData]);\n\n    return (\n        <div>\n            <div className={\"grundflaeche\"}>\n                <div className={!abfrage ? \"box\" : \"box boxleft\"}>\n                    {!abfrage ? (\n                        <>\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter Shiftinformation</h3>\n                            <h4 className={\"deutsch\"}>Bitte halte dein Bändsel unter den Scanner</h4>\n                            <h5 className={\"englisch\"}>Please hold your wristband under the scanner</h5>\n                            <img src={benzel} alt=\"benzel\" className=\"benzel\" />\n                            <div className={\"wetter\"}>\n                                {dataWeather && dataWeather.weather && dataWeather.weather.length > 0 ? (\n                                    <div className={\"wetter-info\"}>\n                                        <p className={\"location\"}>{dataWeather.name}</p>\n                                        <img\n                                            className={\"logo\"}\n                                            src={`https://openweathermap.org/img/wn/${dataWeather.weather[0].icon}@2x.png`}\n                                            alt={\"\"}\n                                        />\n                                        <p className={\"weather-description\"}>{dataWeather.weather[0].description}</p>\n                                        <p className={\"temperature\"}>Temperature: {Math.round(dataWeather.main.temp)} °C</p>\n                                        <p className={\"feels-like\"}>Feels like: {Math.round(dataWeather.main.feels_like)} °C</p>\n                                        <p className={\"wind-speed\"}>Wind: {dataWeather.wind.speed} m/s</p>\n                                    </div>\n                                ) : null}\n                            </div>\n                            <img src={KarteStartpage} alt={\"KarteStartpage\"} className={\"option-karte\"}/>\n                            {/*<div className={\"option-karte\"}><p className={\"frage\"}>Karte?</p></div>*/}\n                        </>\n                    ) : (\n                        <>\n                            {warnung && (\n                                <div className={\"scroll-container\"}>\n                                    <div className={\"warnung\"}>\n                                        <div className={\"warnung-text\"}>{warnungText}</div>\n                                    </div>\n                                </div>\n                            )}\n                            <h2>Supporter:innen Schichtauskunft</h2>\n                            <h3>Supporter Shiftinformation</h3>\n                            {data ? (\n                                <>\n                                    <h4 className={\"deutsch-ausgabe\"}>Deine Schichten</h4>\n                                    <h5 className={\"englisch-ausgabe\"}>Your Shifts</h5>\n                                    {data.data && data.data.length > 0 ? (\n                                        data.data\n                                            .filter((entry: any) => dayjs(entry.startAt).isAfter(exampleDate) || dayjs(entry.startAt).isSame(exampleDate, 'day'))\n                                            .sort((a: any, b: any) => dayjs(a.startAt).diff(exampleDate) - dayjs(b.startAt).diff(exampleDate))\n                                            .slice(0, 3)\n                                            .map((entry: any, index: number) => (\n                                                <div className={\"ausgabeabfrage\"} key={index}>\n                                                    <p className={\"index\"}>{index + 1}</p>\n                                                    <p className={\"days\"}><strong>{days[dayjs(entry.startAt).format('ddd')]}</strong> // {dayjs(entry.startAt).format('DD.MM - HH:mm')}</p>\n                                                    <p className={\"place\"}><img src={Vector} alt=\"Vector\" className=\"Vector\" /> &nbsp; &nbsp; &nbsp;  {waitingSpot[entry.waitingSpot]}</p>\n                                                    <p className={\"needs\"}>Das hier sollten maximal 50 Zeichen sein 123456789</p>\n                                                    <br />\n                                                </div>\n                                            ))\n                                    ) : (\n                                        <p></p>\n                                    )}\n                                </>\n                            ) : (\n                                noData && (\n                                    <>\n                                        <h4 className={\"deutsch-ausgabe-no\"}>Keine Informationen</h4>\n                                        <h5 className={\"englisch-ausgabe-no\"}>No Information</h5>\n                                    </>\n                                )\n                            )}\n                        </>\n                    )}\n                </div>\n                <img src={Karte} alt={\"Karte\"} className={`Karte${abfrage ? ' in' : ''}`} />\n                <img src={Pfeil} alt={\"Pfeil\"} className={`Pfeil ${abfrage ? 'ok' : ''}`}/>\n                <img src={Beschriftung} alt={\"Beschriftung\"} className={`Beschriftung ${abfrage ? 'ko' : ''}`}/>\n            </div>\n            {/*<button onClick={abfrageWetter}>Wetter</button>*/}\n\n            <div className={\"wip\"}>\n                <BarcodeReader\n                    onError={handleError}\n                    onScan={handleScan}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAQC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACtD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,eAAe,CACtB,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,MAAM,KAAM,8BAA8B,CACjD,MAAO,CAAAC,KAAK,KAAM,2BAA2B,CAC7C,MAAO,CAAAC,cAAc,KAAM,qCAAqC,CAChE,MAAO,CAAAC,KAAK,KAAM,6BAA6B,CAC/C,MAAO,CAAAC,YAAY,KAAM,oCAAoC,CAC7D,MAAO,CAAAC,aAAa,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAGjD,KAAM,CAAAC,GAAO,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAM,IAAI,CAAC,CAC3C,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAM,IAAI,CAAC,CACzD,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAS,EAAE,CAAC,CAClD,KAAM,CAACsB,OAAO,CAAEC,UAAU,CAAC,CAAGvB,QAAQ,CAAU,KAAK,CAAC,CACtD,KAAM,CAACwB,OAAO,CAAEC,UAAU,CAAC,CAAGzB,QAAQ,CAAU,KAAK,CAAC,CACtD,KAAM,CAAC0B,WAAW,CAAEC,cAAc,CAAC,CAAG3B,QAAQ,CAAgB,IAAI,CAAC,CACnE,KAAM,CAAA4B,WAAW,CAAG3B,KAAK,CAAC,YAAY,CAAC,CACvC,KAAM,CAAC4B,MAAM,CAAEC,SAAS,CAAC,CAAG9B,QAAQ,CAAU,KAAK,CAAC,CACpD;AACA,KAAM,CAAC+B,aAAa,CAAEC,gBAAgB,CAAC,CAAGhC,QAAQ,CAAS,EAAE,CAAC,CAC9D,KAAM,CAACiC,WAAW,CAAEC,cAAc,CAAC,CAAGlC,QAAQ,CAAwB,IAAI,CAAC,CAE3E;AACA,KAAM,CAAAmC,MAAM,CAAG,KAAK,CAAE;AACtB,KAAM,CAAAC,IAAI,CAAG,KAAK,CAAE;AACpB,KAAM,CAAAC,IAAI,CAAG,IAAI,CAAE;AACnB,KAAM,CAAAC,SAAS,CAAG,KAAK,CAAE;AAEzB;AACA,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,MAAM,CAAG,kCAAkC,CACjD,KAAM,CAAAC,MAAM,CAAG,iDAAiD,CAChE,KAAM,CAAAC,IAAI,CAAG,MAAM,CACnB,KAAM,CAAAC,KAAK,CAAG,QAAQ,CAEtB,KAAM,CAAAC,GAAG,IAAAC,MAAA,CAAMJ,MAAM,QAAAI,MAAA,CAAMC,kBAAkB,CAACJ,IAAI,CAAC,YAAAG,MAAA,CAAUF,KAAK,YAAAE,MAAA,CAAUL,MAAM,CAAE,CAEpF,GAAI,CACA,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACJ,GAAG,CAAC,CACjC,GAAI,CAACG,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACnD,CACA,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC3CjC,cAAc,CAACgC,aAAa,CAAC,CAC7B;AACA,MAAO,CAAAA,aAAa,CACxB,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAEL;AACI,KAAM,CAAAE,wBAAwB,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACrC,GAAI,CACA,KAAM,CAAAlB,gBAAgB,CAAC,CAAC,CAC5B,CAAE,MAAOc,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACxD,CACJ,CAAC,CAAE,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAAE;AAEpB;AACAd,gBAAgB,CAAC,CAAC,CAElB;AACA,MAAO,IAAMmB,aAAa,CAACF,QAAQ,CAAC,CACxC,CAAC,CAEDzD,SAAS,CAAC,IAAM,CACZwD,wBAAwB,CAAC,CAAC,CAC9B,CAAC,CAAE,EAAE,CAAC,CAGN;AACA,KAAM,CAAAI,WAAmC,CAAG,CACxCC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,OAAO,CACfC,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAE,OAAO,CAChBC,GAAG,CAAE,OAAO,CACZC,MAAM,CAAE,eAAe,CACvBC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,OAAO,CACbC,GAAG,CAAE,OAAO,CACZC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,MAAM,CACZC,MAAM,CAAE,OAAO,CACfC,MAAM,CAAE,gBACZ,CAAC,CAED,KAAM,CAAAC,IAA4B,CAAG,CACjCC,GAAG,CAAE,SAAS,CACdC,GAAG,CAAE,SAAS,CACdC,GAAG,CAAE,SAAS,CACdC,GAAG,CAAE,SAAS,CACdC,GAAG,CAAE,SAAS,CACdC,GAAG,CAAE,SAAS,CACdC,GAAG,CAAE,SACT,CAAC,CAGD,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC7BlD,gBAAgB,CAAC,EAAE,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAmD,UAAU,CAAG,KAAO,CAAAnE,IAAY,EAAK,CACvC,GAAIA,IAAI,GAAK,EAAE,EAAIA,IAAI,GAAKe,aAAa,CAAE,CACvCV,UAAU,CAACL,IAAI,CAAC,CAChBgB,gBAAgB,CAAChB,IAAI,CAAC,CACtB,KAAM,CAAAoE,SAAS,CAACpE,IAAI,CAAC,CAAE;AACvBO,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAIU,WAAW,CAAE,CACboD,YAAY,CAACpD,WAAW,CAAC,CAC7B,CACAC,cAAc,CAACoD,UAAU,CAACJ,kBAAkB,CAAE5C,SAAS,CAAC,CAAC,CAC7D,CACJ,CAAC,CAED,KAAM,CAAAiD,WAAW,CAAIC,GAAQ,EAAK,CAC9BlC,OAAO,CAACD,KAAK,CAACmC,GAAG,CAAC,CACtB,CAAC,CAED,KAAM,CAAAJ,SAAS,CAAG,KAAO,CAAAK,KAAa,EAAK,CACvC,GAAI,CACA,KAAM,CAAAC,YAAY,CAAGD,KAAK,CAACE,IAAI,CAAC,CAAC,CACjC,GAAID,YAAY,GAAK,EAAE,CAAE,CACrB,KAAM,CAAAE,eAAe,CAAG,KAAM,CAAA5C,KAAK,8DAAAH,MAAA,CAA8D6C,YAAY,CAAE,CAAC,CAEhH,GAAI,CAACE,eAAe,CAAC3C,EAAE,CAAE,CACrB,KAAM,IAAI,CAAAC,KAAK,CAAC,sCAAsC,CAAC,CAC3D,CAEA,KAAM,CAAA2C,QAAQ,CAAG,KAAM,CAAAD,eAAe,CAACxC,IAAI,CAAC,CAAC,CAC7C,KAAM,CAAA0C,cAAc,CAAG,KAAM,CAAA9C,KAAK,CAAC,wEAAwE,CAAC,CAC5G,KAAM,CAAA+C,WAAW,CAAG,KAAM,CAAAD,cAAc,CAAC1C,IAAI,CAAC,CAAC,CAE/C,GAAI2C,WAAW,CAAC/E,IAAI,EAAI+E,WAAW,CAAC/E,IAAI,CAACgF,IAAI,CAAE,CAC3C,KAAM,CAAAC,eAAe,CAAGF,WAAW,CAAC/E,IAAI,CAACgF,IAAI,CAACE,OAAO,CAAC,UAAU,CAAE,GAAG,CAAC,CACtEzE,UAAU,CAAC,IAAI,CAAC,CAChBE,cAAc,CAACsE,eAAe,CAAC,CACnC,CAEA,GAAIJ,QAAQ,CAAC7E,IAAI,GAAK,IAAI,CAAE,CACxBc,SAAS,CAAC,IAAI,CAAC,CACfb,OAAO,CAAC,KAAK,CAAC,CACdQ,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,IAAM,CACHR,OAAO,CAAC4E,QAAQ,CAAC,CACrB,CACJ,CACJ,CAAE,MAAOxC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CAC1D,CACJ,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACIzC,KAAA,QAAAuF,QAAA,eACIvF,KAAA,QAAKwF,SAAS,CAAE,cAAe,CAAAD,QAAA,eAC3BzF,IAAA,QAAK0F,SAAS,CAAE,CAAC9E,OAAO,CAAG,KAAK,CAAG,aAAc,CAAA6E,QAAA,CAC5C,CAAC7E,OAAO,cACLV,KAAA,CAAAE,SAAA,EAAAqF,QAAA,eACIzF,IAAA,OAAAyF,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCzF,IAAA,OAAAyF,QAAA,CAAI,4BAA0B,CAAI,CAAC,cACnCzF,IAAA,OAAI0F,SAAS,CAAE,SAAU,CAAAD,QAAA,CAAC,+CAA0C,CAAI,CAAC,cACzEzF,IAAA,OAAI0F,SAAS,CAAE,UAAW,CAAAD,QAAA,CAAC,8CAA4C,CAAI,CAAC,cAC5EzF,IAAA,QAAK2F,GAAG,CAAEnG,MAAO,CAACoG,GAAG,CAAC,QAAQ,CAACF,SAAS,CAAC,QAAQ,CAAE,CAAC,cACpD1F,IAAA,QAAK0F,SAAS,CAAE,QAAS,CAAAD,QAAA,CACpBjF,WAAW,EAAIA,WAAW,CAACqF,OAAO,EAAIrF,WAAW,CAACqF,OAAO,CAACC,MAAM,CAAG,CAAC,cACjE5F,KAAA,QAAKwF,SAAS,CAAE,aAAc,CAAAD,QAAA,eAC1BzF,IAAA,MAAG0F,SAAS,CAAE,UAAW,CAAAD,QAAA,CAAEjF,WAAW,CAACuF,IAAI,CAAI,CAAC,cAChD/F,IAAA,QACI0F,SAAS,CAAE,MAAO,CAClBC,GAAG,sCAAAxD,MAAA,CAAuC3B,WAAW,CAACqF,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,WAAU,CAC/EJ,GAAG,CAAE,EAAG,CACX,CAAC,cACF5F,IAAA,MAAG0F,SAAS,CAAE,qBAAsB,CAAAD,QAAA,CAAEjF,WAAW,CAACqF,OAAO,CAAC,CAAC,CAAC,CAACI,WAAW,CAAI,CAAC,cAC7E/F,KAAA,MAAGwF,SAAS,CAAE,aAAc,CAAAD,QAAA,EAAC,eAAa,CAACS,IAAI,CAACC,KAAK,CAAC3F,WAAW,CAAC4F,IAAI,CAACC,IAAI,CAAC,CAAC,QAAG,EAAG,CAAC,cACpFnG,KAAA,MAAGwF,SAAS,CAAE,YAAa,CAAAD,QAAA,EAAC,cAAY,CAACS,IAAI,CAACC,KAAK,CAAC3F,WAAW,CAAC4F,IAAI,CAACE,UAAU,CAAC,CAAC,QAAG,EAAG,CAAC,cACxFpG,KAAA,MAAGwF,SAAS,CAAE,YAAa,CAAAD,QAAA,EAAC,QAAM,CAACjF,WAAW,CAAC+F,IAAI,CAACC,KAAK,CAAC,MAAI,EAAG,CAAC,EACjE,CAAC,CACN,IAAI,CACP,CAAC,cACNxG,IAAA,QAAK2F,GAAG,CAAEhG,cAAe,CAACiG,GAAG,CAAE,gBAAiB,CAACF,SAAS,CAAE,cAAe,CAAC,CAAC,EAE/E,CAAC,cAEHxF,KAAA,CAAAE,SAAA,EAAAqF,QAAA,EACK3E,OAAO,eACJd,IAAA,QAAK0F,SAAS,CAAE,kBAAmB,CAAAD,QAAA,cAC/BzF,IAAA,QAAK0F,SAAS,CAAE,SAAU,CAAAD,QAAA,cACtBzF,IAAA,QAAK0F,SAAS,CAAE,cAAe,CAAAD,QAAA,CAAEzE,WAAW,CAAM,CAAC,CAClD,CAAC,CACL,CACR,cACDhB,IAAA,OAAAyF,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCzF,IAAA,OAAAyF,QAAA,CAAI,4BAA0B,CAAI,CAAC,CAClCnF,IAAI,cACDJ,KAAA,CAAAE,SAAA,EAAAqF,QAAA,eACIzF,IAAA,OAAI0F,SAAS,CAAE,iBAAkB,CAAAD,QAAA,CAAC,iBAAe,CAAI,CAAC,cACtDzF,IAAA,OAAI0F,SAAS,CAAE,kBAAmB,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,CAClDnF,IAAI,CAACA,IAAI,EAAIA,IAAI,CAACA,IAAI,CAACwF,MAAM,CAAG,CAAC,CAC9BxF,IAAI,CAACA,IAAI,CACJmG,MAAM,CAAEC,KAAU,EAAKnH,KAAK,CAACmH,KAAK,CAACC,OAAO,CAAC,CAACC,OAAO,CAAC1F,WAAW,CAAC,EAAI3B,KAAK,CAACmH,KAAK,CAACC,OAAO,CAAC,CAACE,MAAM,CAAC3F,WAAW,CAAE,KAAK,CAAC,CAAC,CACpH4F,IAAI,CAAC,CAACC,CAAM,CAAEC,CAAM,GAAKzH,KAAK,CAACwH,CAAC,CAACJ,OAAO,CAAC,CAACM,IAAI,CAAC/F,WAAW,CAAC,CAAG3B,KAAK,CAACyH,CAAC,CAACL,OAAO,CAAC,CAACM,IAAI,CAAC/F,WAAW,CAAC,CAAC,CACjGgG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACXC,GAAG,CAAC,CAACT,KAAU,CAAEU,KAAa,gBAC3BlH,KAAA,QAAKwF,SAAS,CAAE,gBAAiB,CAAAD,QAAA,eAC7BzF,IAAA,MAAG0F,SAAS,CAAE,OAAQ,CAAAD,QAAA,CAAE2B,KAAK,CAAG,CAAC,CAAI,CAAC,cACtClH,KAAA,MAAGwF,SAAS,CAAE,MAAO,CAAAD,QAAA,eAACzF,IAAA,WAAAyF,QAAA,CAASzB,IAAI,CAACzE,KAAK,CAACmH,KAAK,CAACC,OAAO,CAAC,CAACU,MAAM,CAAC,KAAK,CAAC,CAAC,CAAS,CAAC,OAAI,CAAC9H,KAAK,CAACmH,KAAK,CAACC,OAAO,CAAC,CAACU,MAAM,CAAC,eAAe,CAAC,EAAI,CAAC,cACvInH,KAAA,MAAGwF,SAAS,CAAE,OAAQ,CAAAD,QAAA,eAACzF,IAAA,QAAK2F,GAAG,CAAElG,MAAO,CAACmG,GAAG,CAAC,QAAQ,CAACF,SAAS,CAAC,QAAQ,CAAE,CAAC,oBAAuB,CAACzC,WAAW,CAACyD,KAAK,CAACzD,WAAW,CAAC,EAAI,CAAC,cACtIjD,IAAA,MAAG0F,SAAS,CAAE,OAAQ,CAAAD,QAAA,CAAC,oDAAkD,CAAG,CAAC,cAC7EzF,IAAA,QAAK,CAAC,GAL6BoH,KAMlC,CACR,CAAC,cAENpH,IAAA,OAAM,CACT,EACH,CAAC,CAEHmB,MAAM,eACFjB,KAAA,CAAAE,SAAA,EAAAqF,QAAA,eACIzF,IAAA,OAAI0F,SAAS,CAAE,oBAAqB,CAAAD,QAAA,CAAC,qBAAmB,CAAI,CAAC,cAC7DzF,IAAA,OAAI0F,SAAS,CAAE,qBAAsB,CAAAD,QAAA,CAAC,gBAAc,CAAI,CAAC,EAC3D,CAET,EACH,CACL,CACA,CAAC,cACNzF,IAAA,QAAK2F,GAAG,CAAEjG,KAAM,CAACkG,GAAG,CAAE,OAAQ,CAACF,SAAS,SAAAvD,MAAA,CAAUvB,OAAO,CAAG,KAAK,CAAG,EAAE,CAAG,CAAE,CAAC,cAC5EZ,IAAA,QAAK2F,GAAG,CAAE/F,KAAM,CAACgG,GAAG,CAAE,OAAQ,CAACF,SAAS,UAAAvD,MAAA,CAAWvB,OAAO,CAAG,IAAI,CAAG,EAAE,CAAG,CAAC,CAAC,cAC3EZ,IAAA,QAAK2F,GAAG,CAAE9F,YAAa,CAAC+F,GAAG,CAAE,cAAe,CAACF,SAAS,iBAAAvD,MAAA,CAAkBvB,OAAO,CAAG,IAAI,CAAG,EAAE,CAAG,CAAC,CAAC,EAC/F,CAAC,cAGNZ,IAAA,QAAK0F,SAAS,CAAE,KAAM,CAAAD,QAAA,cAClBzF,IAAA,CAACF,aAAa,EACVwH,OAAO,CAAEzC,WAAY,CACrB0C,MAAM,CAAE9C,UAAW,CACtB,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAApE,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}